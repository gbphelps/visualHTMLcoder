{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascripts/slider/utils.js","webpack:///./javascripts/slider/updaters/updateCanvas.js","webpack:///./javascripts/slider/updaters/updateDragger2.js","webpack:///./javascripts/slider/updaters/updateSwatch.js","webpack:///./javascripts/slider/listeners/circleDraggerCallback.js","webpack:///./javascripts/slider/applyUpdates.js","webpack:///./javascripts/slider/listeners/dragger2Callback.js","webpack:///./javascripts/slider/listeners/colorInputCallback.js","webpack:///./javascripts/slider/initializers/initializeSwatch.js","webpack:///./javascripts/slider/initializers/initializeCircleSlider.js","webpack:///./javascripts/slider/slider.js","webpack:///./javascripts/slider/initialize.js","webpack:///./javascripts/slider/initializers/initializeCanvas.js","webpack:///./javascripts/slider/initializers/initializeDragger2.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","format","color","tag","parent","props","style","element","document","createElement","assign","append","calcColor","progress","inc","Math","floor","updateCanvas","canvas","getElementById","ctx","getContext","buffer","createImageData","width","height","populateBuffer","putImageData","XtoY","x","sqrt","YtoX","y","alii","triangleCoords","antiAliased","coordsCalculated","calculateCoords","top","xAvg","yAvg","theta0","atan","theta","PI","cos","red","green","blue","data","antiAlias","left","right","bottom","collision","keys","length","setOpacity","number","orientation","convex","opacity","some","el","updateDragger2","xp","dragger2","yp","R","round","G","B","pip","background","updateSwatch","swatch","sat","reduce","acc","forEach","hue","circleDraggerCallback","e","preventDefault","xPrev","yPrev","clientX","clientY","circlePip","body","classList","add","mousemove","magnitude2","circleDragger","tangent","scale","radius","spectrumContainer","circleSlider","thickness","abs","setDraggerPosition","addEventListener","removeEventListener","remove","once","diameter","applyUpdates","triangleDragger","sin","dragger2Callback","diffx","diffy","newx","newy","getBoundingClientRect","colorInputCallback","input","val","target","last","push","min","mid","max","Array","from","sort","missingColor","parentColor","tan","revCalc","generateColor","initializeSwatch","container","id","setAttribute","select","inputContainer","innerHTML","initializeCircleSlider","canvasWidth","spectrumWidth","dragDiam","border-radius","position","z-index","margin","transition","outer","calcXsects","inner","initializeCircleSlider_populateBuffer","fillPixel","curve","innerRadius","rSquare","initializeCircleSlider_antiAlias","xsects","coord","orient","initializeCircleSlider_setOpacity","initializeCircleSlider_n","cursor","display","triangleContainer","initializeCanvas","d2diameter","borderRadius","border","border-left","border-top","initializeDragger2"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const format = color => `rgb(${color[0]},${color[1]},${color[2]})`;\n\nexport const create = (tag, parent, props, style) => {\n  const element = document.createElement(tag);\n  Object.assign(element, props);\n  parent.append(element);\n  if (style) Object.assign(element.style, style);\n  return element;\n};\n\nexport const calcColor = progress => {\n    let inc = 255 * (progress - Math.floor(progress));\n\n    switch (Math.floor(progress)){\n      case 0:\n        return [255, inc, 0]\n      case 1:\n        return [255-inc, 255, 0]\n      case 2:\n        return [0, 255, inc]\n      case 3:\n        return [0, 255-inc, 255]\n      case 4:\n        return [inc, 0, 255]\n      case 5:\n        return [255, 0, 255-inc]\n      case 6:\n        return [255, 0, 0]\n    }\n}\n\nexport const revCalc = color => {\n  let progress;\n\n  if (color[0] === 255 && color[2] === 0){\n    progress = 0 + color[1]/255;\n  }else if (color[1] === 255 && color[2] === 0){\n    progress = 1 + 1 - color[0]/255;\n  }else if (color[1] === 255 && color[0] === 0){\n    progress = 2 + color[2]/255;\n  }else if (color[2] === 255 && color[0] === 0){\n    progress = 3 + 1 - color[1]/255;\n  }else if (color[2] === 255 && color[1] === 0){\n    progress = 4 + color[0]/255;\n  }else if (color[0] === 255 && color[1] === 0){\n    progress = 5 + 1 - color[2]/255;\n  }\n\n  return progress;\n}\n\nexport const generateColor = color => {\n  const canvas = document.getElementById('canvas');\n\n  let [min,mid,max] = Array.from(color).sort((x,y)=> x-y);\n  const r = max / 255;\n  const theta = min / max;\n  const missingColor = 255 * (mid - min) / (max - min);\n\n  let parentColor = [];\n  if (max !== min){\n    color.forEach(hue =>{\n      switch (hue){\n        case max: parentColor.push(255); break;\n        case min: parentColor.push(0); break;\n        default: parentColor.push(missingColor); break;\n      }\n    });\n  } else {\n    parentColor = canvas.color\n  }\n\n  const theta0 = Math.PI/3 - (Math.PI/3 * theta);\n  let x = Math.sqrt(3) * max * canvas.width /2 /255 /Math.cos(Math.PI/6-theta0) /Math.sqrt(1+ Math.tan(theta0) * Math.tan(theta0));\n  let y = canvas.height - x * Math.tan(theta0);\n\n  if (max === 0){\n    x = 0;\n    y = canvas.height;\n  } else if (min === 255){\n    x = canvas.width;\n    y = canvas.height;\n  }\n\n  const progress = revCalc(parentColor)*Math.PI/3;\n\n  const triangleDragger = {x,y};\n  return {triangleDragger, progress};\n\n};\n","import { format } from '../utils';\n\nexport const updateCanvas = color => {\n\n  const canvas = document.getElementById('canvas');\n  const ctx = canvas.getContext('2d');\n  canvas.color = color;\n\n  const buffer = ctx.createImageData(canvas.width, canvas.height);\n\n  populateBuffer(buffer);\n  ctx.putImageData(buffer, 0, 0);\n\n};\n\n\nconst XtoY = x => {\n  return x < 0 ?\n    Math.sqrt(3) * (canvas.width/2 + x) :\n    Math.sqrt(3) * (canvas.width/2 - x)\n}\n\nconst YtoX = y => {\n    return - y / Math.sqrt(3) + canvas.width/2\n}\n\n\nconst alii = {};\nconst triangleCoords = {};\n\nlet antiAliased = false;\nlet coordsCalculated = false;\n\n\n//TODO: cache theta & r for i to improve speed\nconst calculateCoords = i => {\n  const top = Math.floor(i / canvas.width);\n  const left = Math.floor(i % canvas.width);\n\n  const x = left; //TODO antialias this manually with .5 and antialias function from initializeCircleSlider\n  const y = canvas.height - top;\n\n  const xAvg = x + .5;\n  const yAvg = y - .5\n\n  let theta0 = Math.atan(yAvg/xAvg);\n  const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n  //map radial coordinates [0, pi/3] -> [1, 0]\n\n  let r = Math.sqrt(xAvg*xAvg + yAvg*yAvg)/canvas.width;\n  r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2)\n  //map pie wedge to equilateral triangle by flattening arc\n  triangleCoords[i] = {x,y,theta,r};\n  return {x,y,theta,r};\n}\n\n\n\n//TODO TODO: just iterating thru buffer is causing lag.\n//possible to stop iterating through dead points?\n//possible also to set opacity on black and white but have a bg color set\n//to canvas.color? native algorithms may be faster.\n\nconst populateBuffer = (buffer) => {\n  const [red, green, blue] = canvas.color;\n\n  for (let i=0; i<(canvas.height * canvas.width); i++) {\n\n    let x,y,theta,r;\n    if (coordsCalculated){\n      ({x,y,theta,r} = triangleCoords[i])\n    }else{\n      ({x,y,theta,r} = calculateCoords(i))\n    }\n\n    buffer.data[i*4 + 0] =\n      (red + (255 - red) * theta) * r;\n    buffer.data[i*4 + 1] =\n      (green + (255 - green) * theta) * r;\n    buffer.data[i*4 + 2] =\n      (blue  + (255 - blue) * theta) * r;\n    if (!(theta < 0 || theta > 1 || r > 1)){\n      buffer.data[i*4 + 3] = 255;\n    }else{\n      buffer.data[i*4 + 3] = 0;\n    }\n\n    if (antiAliased){\n      if (n(alii[i])) buffer.data[i*4 + 3] = alii[i];\n    } else {\n      antiAlias(x-canvas.width/2, y, buffer, i);\n    }\n  }\n  antiAliased = true;\n  coordsCalculated = true;\n};\n\n\n\n\n\n//TODO run this only once, calculate all of the XY issues,\n//apply same antiAliasing @ i always\nconst antiAlias = (x, y, buffer, i) => {\n\n  const left = x;\n  const right = x + 1;\n  const top = y;\n  const bottom = y - 1;\n  const collision = {};\n\n  if (\n    left <= YtoX(top) && YtoX(top) <= right ||\n    left <= -YtoX(top) && -YtoX(top) <= right\n     ){\n    //top collision\n    collision.top = x > 0 ? YtoX(top)-left : -YtoX(top)-left;\n  }\n\n  if (\n    left <= YtoX(bottom) && YtoX(bottom) <= right ||\n    left <= -YtoX(bottom) && -YtoX(bottom) <= right\n  ){\n    //bottom collision\n    collision.bottom = x > 0 ? YtoX(bottom)-left : -YtoX(bottom)-left;\n  }\n\n  if (\n    bottom <= XtoY(left) && XtoY(left) <= top\n  ){\n    //left collision\n    collision.left = XtoY(left)-bottom;\n  }\n\n  if (\n    bottom <= XtoY(right) && XtoY(right) <= top\n  ){\n    //right collision\n    collision.right = XtoY(right)-bottom;\n  }\n\n  if (Object.keys(collision).length){\n    const orientation = x >= 0 ?\n      {x: 0, y: 0} : {x: 1, y: 0}\n    setOpacity(collision, orientation, buffer, i, true);\n  }\n};\n\n\nconst n = (number) => typeof(number) === 'number' ? true : false;\nconst setOpacity = ({left,right,top,bottom}, orientation, buffer, i, convex) => {\n  let opacity;\n\n  if (n(left) && n(right)){\n    opacity =\n      orientation.y === 0 ?\n        (left+right)/2 :\n        1 - (left+right)/2\n\n  } else if (n(top) && n(bottom)) {\n    opacity =\n       orientation.x === 0 ?\n         (top+bottom)/2 :\n         1 - (top+bottom)/2\n\n  } else if (n(bottom) && n(left)) {\n    opacity =\n       orientation.x === 0 && orientation.y === 0 ?\n          bottom * left / 2 :\n          1 - bottom * left / 2\n\n  } else if (n(bottom) && n(right)) {\n    opacity =\n       orientation.x === 1 && orientation.y === 0 ?\n          (1-bottom) * right / 2 :\n          1 - (1-bottom) * right /2\n\n  } else if (n(top) && n(left)) {\n    opacity =\n      orientation.x === 0 && orientation.y === 1 ?\n        top * (1-left) / 2 :\n        1 - top * (1-left) / 2\n\n  } else if (n(top) && n(right)) {\n    opacity =\n      orientation.x === 1 && orientation.y === 1 ?\n        (1-top)*(1-right)/2 :\n        1 - (1-top)*(1-right)/2\n\n  }\n\n  if ([left,right,top,bottom].some(el=>n(el))){\n    buffer.data[i*4 + 3] = convex ?\n      opacity * 255 :\n      (1-opacity) * 255;\n\n    alii[i] = buffer.data[i*4 + 3];\n  }\n\n\n}\n","import { format } from '../utils'\n\nexport const updateDragger2 = () => {\n\n    const xp = dragger2.x;\n    const yp = canvas.height - dragger2.y;\n\n    let theta0 = Math.atan(yp/xp);\n    const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n\n    let r = Math.sqrt(xp*xp + yp*yp)/canvas.width;\n    r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2);\n\n    let R = Math.round((canvas.color[0] + (255-canvas.color[0])*theta) * r) || 0;\n    let G = Math.round((canvas.color[1] + (255-canvas.color[1])*theta) * r) || 0;\n    let B = Math.round((canvas.color[2] + (255-canvas.color[2])*theta) * r) || 0;\n\n    dragger2.color = [R,G,B];\n    pip.style.background = format([R,G,B]);\n}\n","import { format } from '../utils'\n\nexport const updateSwatch = () => {\n  const swatch = document.getElementById('swatch');\n  swatch.style.background = format(dragger2.color);\n  const sat = dragger2.color.reduce((acc,el) => acc += el)-255;\n  swatch.style.color = (sat < 255*3/2 ? 'white' : 'black');\n   dragger2.color.forEach((hue,i)=>{\n     const input = document.getElementById(`color-${i}`);\n     input.value = hue;\n   });\n};\n","import { updateCanvas } from '../updaters/updateCanvas';\nimport { format, calcColor } from '../utils';\nimport { updateSwatch } from '../updaters/updateSwatch';\nimport { updateDragger2 } from '../updaters/updateDragger2'\n\n\nexport const circleDraggerCallback = e => {\n  e.preventDefault();\n  let [ xPrev, yPrev ] = [ e.clientX, e.clientY ];\n  circlePip.style.height = '30px';\n  circlePip.style.width = '30px';\n  document.body.classList.add('grabbing');\n\n  const mousemove = e => {\n\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n\n    const m = [diffx, -diffy];\n\n    const magnitude2 =\n      circleDragger.y*circleDragger.y + circleDragger.x*circleDragger.x;\n    const tangent = [-circleDragger.y, circleDragger.x];\n    const scale = (m[0]*tangent[0] + m[1]*tangent[1])/magnitude2;\n\n\n    let x, y;\n\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    if (Math.abs(tangent[0]) > Math.abs(tangent[1])){\n      x = circleDragger.x + tangent[0]*scale;\n      if (circleDragger.y > circleDragger.x){\n        y = Math.sqrt(radius*radius - x * x);\n      } else {\n        y = -Math.sqrt(radius*radius - x * x);\n      }\n    }else{\n      y = circleDragger.y + tangent[1]*scale;\n      if (-Math.abs(circleDragger.y) < circleDragger.x){\n        x = Math.sqrt(radius*radius - y * y)\n      } else {\n        x = -Math.sqrt(radius*radius - y * y)\n      }\n    }\n\n\n    //fix fast-drag errors\n    if (Math.abs(x) > radius){\n      x = radius;\n      y = 0;\n    }\n    if (Math.abs(y) > radius){\n      y = radius;\n      x = 0;\n    }\n\n    setDraggerPosition({x, y});\n\n\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n  }\n\n  document.addEventListener('mousemove', mousemove);\n  document.addEventListener('mouseup', ()=>{\n    document.removeEventListener('mousemove', mousemove);\n    document.body.classList.remove('grabbing')\n    circlePip.style.height = '10px';\n    circlePip.style.width = '10px'; //TODO use global variables attached to HTML elements\n  },{once: true})\n\n}\n\nexport const setDraggerPosition = ({ x, y }) => {\n  const left = (x + spectrumContainer.width/2) - circleDragger.diameter/2;\n  const top = (spectrumContainer.width/2 - y) - circleDragger.diameter/2;\n\n\n  let theta;\n  if (x < 0){\n    theta = Math.atan(y/x) + Math.PI/2;\n  } else {\n    theta = Math.atan(y/x) + 3/2 * Math.PI;\n  }\n\n  const progress = 3 * theta / Math.PI;\n\n  circleDragger.x = x;\n  circleDragger.y = y;\n  circleDragger.style.left = left + 'px';\n  circleDragger.style.top = top + 'px';\n  circlePip.style.background = format(calcColor(progress))\n\n  updateCanvas(calcColor(progress));\n  updateDragger2();\n  updateSwatch();\n}\n","import { format, calcColor,revCalc } from './utils';\nimport { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\nimport { setDraggerPosition } from './listeners/circleDraggerCallback'\n\n\nexport const applyUpdates = ({triangleDragger, progress}) => {\n\n  if (typeof(progress) !== 'undefined') {\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    const x = Math.cos(progress + Math.PI/2) * radius;\n    const y = Math.sin(progress + Math.PI/2) * radius;\n    setDraggerPosition({x, y});\n\n\n\n  }\n\n  if (typeof(triangleDragger) !== 'undefined') {\n    dragger2.x = triangleDragger.x;\n    dragger2.style.left = dragger2.x - dragger2.diameter/2 + 'px';\n    dragger2.y = triangleDragger.y;\n    dragger2.style.top = dragger2.y - dragger2.diameter/2 + 'px';\n  }\n\n  updateDragger2();\n  updateSwatch();\n\n}\n","import { applyUpdates } from '../applyUpdates';\n\nexport const dragger2Callback = e => {\n\n  e.preventDefault();\n  let xPrev = e.clientX;\n  let yPrev = e.clientY;\n\n  pip.style.width = '30px';\n  pip.style.height = '30px';\n\n  document.body.classList.add('grabbing');\n\n  const mousemove = e => {\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n    const newx = dragger2.x + diffx;\n    const newy = dragger2.y + diffy;\n\n    const box = canvas.getBoundingClientRect();\n\n\n\n    let x, y;\n\n    if (-canvas.height*(2*newx/canvas.width - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.width/2 * (1 - newy/canvas.height)\n      }else{\n        x = newx;\n        y = -canvas.height*(2*newx/canvas.width - 1);\n      }\n    }else if(canvas.height*(2*newx/canvas.width - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.width/2 * (newy/canvas.height + 1)\n      }else{\n        x = newx;\n        y = canvas.height*(2*newx/canvas.width - 1);\n      }\n    }else{\n      x = newx;\n      y = newy;\n    }\n\n    //edge case clearance\n\n    if (y > canvas.height){\n      y = canvas.height;\n    }else if (y < 0){\n      y = 0;\n    }\n\n    if (x > canvas.width){\n      x = canvas.width;\n    } else if (x < 0){\n      x = 0;\n    }\n\n    if (newy < 0){\n      y = 0;\n      x = canvas.width/2;\n    }\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n\n    const triangleDragger = {x,y};\n    applyUpdates({triangleDragger})\n  };\n\n  document.addEventListener('mousemove', mousemove);\n\n  document.addEventListener('mouseup',()=>{\n      document.removeEventListener('mousemove', mousemove);\n      document.body.classList.remove('grabbing');\n      pip.style.width = '10px';\n      pip.style.height = '10px';\n    },{\n      once:true\n    }\n  );\n\n}\n","import { format, calcColor, revCalc, generateColor } from '../utils';\nimport { applyUpdates } from '../applyUpdates';\n\nexport const colorInputCallback = e => {\n    const color = [];\n    for (let i = 0; i < 3; i++) {\n      const input = document.getElementById(`color-${i}`);\n      let val = +input.value;\n      if (input === e.target && !(val >= 0 && val <= 255)){\n        input.value = input.last;\n        return;\n      };\n      color.push(val);\n      input.last = val;\n    }\n    applyUpdates(generateColor(color))\n  };\n","import { format, create } from '../utils';\nimport { colorInputCallback } from '../listeners/colorInputCallback';\n\n\nexport const initializeSwatch = () => {\n  const swatch =\n    create('DIV', container, {\n      id: 'swatch'\n    },{\n      background: format(canvas.color)\n    });\n\n    const red = document.createElement('INPUT');\n    red.id = 'color-0';\n    red.last = 255;\n    const green = document.createElement('INPUT');\n    green.last = 0;\n    green.id = 'color-1';\n    const blue = document.createElement('INPUT');\n    blue.last = 0;\n    blue.id = 'color-2';\n\n    [red,green,blue].forEach(input => {\n      input.setAttribute('size', 3);\n      input.addEventListener('input',colorInputCallback);\n      input.addEventListener('focus',e=>e.target.select());\n    })\n\n    const inputContainer = create('DIV', swatch, {\n        id: 'inputContainer'\n      });\n\n    create('SPAN', inputContainer, {innerHTML: 'rgb('});\n    inputContainer.append(red);\n    create('SPAN', inputContainer, {innerHTML: ','});\n    inputContainer.append(green);\n    create('SPAN', inputContainer, {innerHTML: ','});\n    inputContainer.append(blue);\n    create('SPAN', inputContainer, {innerHTML: ')'});\n}\n","import { create, calcColor } from '../utils';\nimport { circleDraggerCallback } from '../listeners/circleDraggerCallback';\n\n\n\nexport const initializeCircleSlider = (canvasWidth, spectrumWidth, dragDiam) => {\n  const spectrumContainer = create('DIV', container,{\n    id: 'spectrumContainer',\n    width: canvasWidth\n  },{\n    // background: 'black',\n    'border-radius': '5px',\n    height: canvasWidth + 'px',\n    width: canvasWidth + 'px',\n    position: 'relative',\n  })\n\n  const circleSlider = create('CANVAS', spectrumContainer, {\n    id: 'circleSlider',\n    height: canvasWidth,\n    width: canvasWidth,\n    thickness: spectrumWidth\n  });\n\n  const circleDragger = create('DIV', spectrumContainer, {\n    id: 'circleDragger',\n    diameter: dragDiam,\n    x: 0,\n    y: canvasWidth/2\n  },{\n    height: dragDiam + 'px',\n    width: dragDiam + 'px',\n    'border-radius': '50%',\n    position: 'absolute',\n    top: (spectrumWidth - dragDiam)/2 + 'px',\n    left: (canvasWidth - dragDiam)/2 + 'px',\n    'z-index': 2\n  })\n\n  const circlePip = create('DIV', circleDragger, {\n    id: 'circlePip'\n  },{\n    height: '10px', //TODO variables!\n    width: '10px',\n    'border-radius': '50%',\n    background: 'rgb(255,0,0)',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    margin: 'auto',\n    transition: 'width .3s, height .3s'\n  })\n  circleDragger.addEventListener('mousedown', circleDraggerCallback);\n\n\n  const ctx2 = circleSlider.getContext('2d');\n\n  const buffer = ctx2.createImageData(canvasWidth, canvasWidth);\n  const outer = calcXsects(circleSlider.width/2);\n  const inner = calcXsects(circleSlider.width/2 - spectrumWidth);\n  populateBuffer(buffer, {outer, inner});\n}\n\n\n\nconst fillPixel = (buffer, i, color) => {\n  buffer.data[i*4 + 0] = color[0];\n  buffer.data[i*4 + 1] = color[1];\n  buffer.data[i*4 + 2] = color[2];\n};\n\n\nconst populateBuffer = (buffer, curve) => {\n  const innerRadius = circleSlider.width/2 - circleSlider.thickness;\n\n  for (let i = 0; i < circleSlider.width * circleSlider.width; i++){\n\n    let left = i % circleSlider.width;\n    const x = left - circleSlider.width/2;\n    const xAvg = x + .5;\n\n    let bottom = circleSlider.width - Math.floor(i / circleSlider.width);\n    const y = bottom - circleSlider.width/2;\n    const yAvg = y - .5;\n\n    if (x === 0 && y === 0) continue;\n\n    let progress=0;\n    if (x < 0){\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3;\n    } else {\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3 + 3;\n    }\n\n    const color = calcColor(progress);\n\n    fillPixel(buffer,i,color);\n    const rSquare = xAvg*xAvg + yAvg*yAvg;\n    if ( rSquare <= circleSlider.width*circleSlider.width/4 && rSquare >= innerRadius* innerRadius){\n      buffer.data[i*4 + 3] = 255;\n    }\n\n    antiAlias(x, y, curve.outer, buffer, i, true);\n    antiAlias(x, y, curve.inner, buffer, i, false);\n\n  }\n\n  const ctx = circleSlider.getContext('2d');\n  ctx.putImageData(buffer,0,0);\n}\n\n\n\n\n\n//TODO find boundary. if x < 0 find error. if x > 0 find error next time.\n//TODO find negative boundary. figure out where to place.\n\nconst calcXsects = (radius) => {\n  const xsects = {};\n  for (let i=0; i<circleSlider.width+1; i++){\n    let coord = i - circleSlider.width/2;\n    let collision = Math.sqrt(radius*radius - coord * coord);\n    xsects[coord] = collision;\n  }\n  return xsects;\n}\n\nconst orient = (x, y) => {\n  let orientation = {};\n  orientation.x = x >= 0 ? 0 : 1;\n  orientation.y = y > 0 ? 0 : 1;\n  return orientation;\n}\n\nconst antiAlias = (x, y, curve, buffer, i, convex) => {\n\n  const left = x;\n  const right = x + 1;\n  const bottom = y - 1;\n  const top = y;\n  const collision = {};\n\n  if (\n    left <= curve[top] && curve[top] <= right ||\n    left <= -curve[top] && -curve[top] <= right\n     ){\n    //top collision\n    collision.top = x > 0 ? curve[top]-left : -curve[top]-left;\n  }\n\n  if (\n    left <= curve[bottom] && curve[bottom] <= right ||\n    left <= -curve[bottom] && -curve[bottom] <= right\n  ){\n    //bottom collision\n    collision.bottom = x > 0 ? curve[bottom]-left : -curve[bottom]-left;\n  }\n\n  if (\n    bottom <= curve[left] && curve[left] <= top ||\n    bottom <= -curve[left] && -curve[left] <= top\n  ){\n    //left collision\n    collision.left = y > 0 ? curve[left]-bottom : -curve[left]-bottom;\n  }\n\n  if (\n    bottom <= curve[right] && curve[right] <= top ||\n     bottom <= -curve[right] && -curve[right] <= top\n  ){\n    //right collision\n    collision.right = y > 0 ? curve[right]-bottom : -curve[right]-bottom;\n  }\n\n if (Object.keys(collision).length) {\n   const orientation = orient(x,y);\n   setOpacity(collision, orientation, buffer, i, convex);\n }\n}\n\n\nconst n = (number) => typeof(number) === 'number' ? true : false;\nconst setOpacity = ({left,right,top,bottom}, orientation, buffer, i, convex) => {\n  let opacity;\n\n  if (n(left) && n(right)){\n    opacity =\n      orientation.y === 0 ?\n        (left+right)/2 :\n        1 - (left+right)/2\n\n  } else if (n(top) && n(bottom)) {\n    opacity =\n       orientation.x === 0 ?\n         (top+bottom)/2 :\n         1 - (top+bottom)/2\n\n  } else if (n(bottom) && n(left)) {\n    opacity =\n       orientation.x === 0 && orientation.y === 0 ?\n          bottom * left / 2 :\n          1 - bottom * left / 2\n        //TODO top discont @ x = 0\n\n  } else if (n(bottom) && n(right)) {\n    opacity =\n       orientation.x === 1 && orientation.y === 0 ?\n          (1-bottom) * right / 2 :\n          1 - (1-bottom) * right /2\n\n  } else if (n(top) && n(left)) {\n    opacity =\n      orientation.x === 0 && orientation.y === 1 ?\n        top * (1-left) / 2 :\n        1 - top * (1-left) / 2\n      //TODO bottom discont @ x = 0\n\n  } else if (n(top) && n(right)) {\n    opacity =\n      orientation.x === 1 && orientation.y === 1 ?\n        (1-top)*(1-right)/2 :\n        1 - (1-top)*(1-right)/2\n\n  }\n\n  if ([left,right,top,bottom].some(el=>n(el))){\n    buffer.data[i*4 + 3] = convex ?\n      opacity * 255 :\n      (1-opacity) * 255\n  }\n\n}\n","import { initialize } from './initialize'\n\n\n\n\n//const grab = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), default';\n//const grabbing = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/closedhand.cur), default';\n\n\ndocument.addEventListener('DOMContentLoaded', initialize);\n","import { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\n\nimport { format, calcColor, create } from './utils'\n\nimport { dragger2Callback } from './listeners/dragger2Callback';\n\nimport { initializeSwatch } from './initializers/initializeSwatch';\nimport { initializeDragger2 } from './initializers/initializeDragger2';\nimport { initializeCanvas } from './initializers/initializeCanvas';\n\n\nimport { initializeCircleSlider } from './initializers/initializeCircleSlider';\n\n\n\n\nexport const initialize = () => {\n\n  const d2diameter = 50; //NOTE can be arbitrarily large, until it blocks other elements\n  const sliderWidth = 10;\n  const canvasWidth = 150;\n  const sliderHeight = Math.round(canvasWidth*Math.sqrt(3)/2);\n\n  const circleSliderWidth = 250;\n  const circleSliderThickness = 5;\n  const circleSliderDragger = 50; //NOTE can be arbitrarily large\n\n\n  document.body.style.cursor = 'default';\n\n  const container =\n    create('DIV',document.body,{id: 'container'},{display: 'flex'});\n\n  initializeCircleSlider(\n    circleSliderWidth,\n    circleSliderThickness,\n    circleSliderDragger); //TODO fails on odd numbered widths\n  initializeCanvas(canvasWidth);\n  initializeDragger2(d2diameter);\n  initializeSwatch();\n\n\n\n  updateDragger2();\n  updateSwatch();\n}\n","import { create } from '../utils';\nimport { updateCanvas } from '../updaters/updateCanvas';\n\nexport const initializeCanvas = (canvasWidth) => {\n\n\n  const height = Math.round(canvasWidth*Math.sqrt(3)/2);\n\n  const triangleContainer = create('DIV',spectrumContainer, {\n    id: 'triangleContainer'\n  },{\n    height: Math.round(canvasWidth*Math.sqrt(3)/2),\n    width: canvasWidth,\n    position: 'absolute',\n    top: circleSlider.height/2 - height + canvasWidth/(2*Math.sqrt(3)) + 'px',\n    left: (circleSlider.width - canvasWidth)/2 + 'px',\n  });\n\n  const canvas = create('CANVAS', triangleContainer, {\n    id: 'canvas',\n    height: Math.round(canvasWidth*Math.sqrt(3)/2),\n    width: canvasWidth,\n  });\n\n  updateCanvas([255, 0, 0, 255]);\n  const ctx = canvas.getContext('2d');\n}\n","import { create } from '../utils';\nimport { dragger2Callback } from '../listeners/dragger2Callback';\n\n\nexport const initializeDragger2 = (d2diameter) => {\n  const dragger2 =\n    create('DIV', triangleContainer, {\n      id: 'dragger2',\n      diameter: d2diameter,\n      x: canvas.width/2,\n      y: 0,\n    },{\n      height: d2diameter + 'px',\n      width: d2diameter + 'px',\n      borderRadius: '50%',\n      left: (canvas.width - d2diameter)/2 + 'px',\n      top: -d2diameter/2 + 'px'\n    });\n\n\n  const pip =\n  create('DIV', dragger2, {\n      id: 'pip',\n      width : 10 //TODO variables\n    },{\n      display: 'flex',\n      background: 'black',\n      height: '10px', //TODO variables\n      width: '10px',\n      'z-index': 2,\n      'border-radius': '50%',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      margin: 'auto',\n      transition: 'height .3s , width .3s'\n    });\n  pip.addEventListener('mousedown', dragger2Callback);\n\n\n  const border = '1px solid rgba(255,255,255,.7)'\n  create('DIV', pip,{\n    id: 'crosshair1'\n  },{\n    position: 'absolute',\n    'border-left': border,\n    height: '10px',\n    width: '1px',\n    left: '50%',\n    bottom: '-5px'\n  })\n\n  create('DIV', pip,{\n    id: 'crosshair2'\n  },{\n    position: 'absolute',\n    'border-left': border,\n    height: '10px',\n    width: '1px',\n    left: '50%',\n    top: '-5px'\n  })\n\n  create('DIV', pip,{\n    id: 'crosshair3'\n  },{\n    position: 'absolute',\n    'border-top': border,\n    height: '1px',\n    width: '10px',\n    top: '50%',\n    left: '-6px'\n  })\n\n  create('DIV', pip,{\n    id: 'crosshair4'\n  },{\n    position: 'absolute',\n    'border-top': border,\n    height: '1px',\n    width: '10px',\n    top: '50%',\n    right: '-6px'\n  })\n\n};\n"],"sourceRoot":""}