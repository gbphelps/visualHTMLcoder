{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascripts/slider/utils.js","webpack:///./javascripts/slider/updaters/updateCanvas.js","webpack:///./javascripts/slider/updaters/updateDragger2.js","webpack:///./javascripts/slider/updaters/updateSwatch.js","webpack:///./javascripts/slider/applyUpdates.js","webpack:///./javascripts/slider/listeners/dragger2Callback.js","webpack:///./javascripts/slider/listeners/draggerCallback.js","webpack:///./javascripts/slider/listeners/colorInputCallback.js","webpack:///./javascripts/slider/initializers/initializeSwatch.js","webpack:///./javascripts/slider/initializers/initializeDragger2.js","webpack:///./javascripts/slider/initializers/initializeCanvas.js","webpack:///./javascripts/slider/initializers/initializeSlider.js","webpack:///./javascripts/slider/listeners/circleDraggerCallback.js","webpack:///./javascripts/slider/initializers/initializeCircleSlider.js","webpack:///./javascripts/slider/slider.js","webpack:///./javascripts/slider/initialize.js","webpack:///./javascripts/slider/initializers/initializeDragger.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","format","color","tag","parent","props","style","element","document","createElement","assign","append","calcColor","status","progress","slider","height","inc","Math","floor","updateCanvas","canvas","getElementById","ctx","getContext","buffer","createImageData","width","populateBuffer","putImageData","antiAlias","top","xp","yp","theta0","atan","theta","PI","sqrt","cos","data","g1","createLinearGradient","addColorStop","g2","beginPath","moveTo","lineTo","strokeStyle","stroke","closePath","updateDragger2","dragger2","x","y","R","round","G","B","background","updateSwatch","swatch","sat","reduce","acc","el","forEach","hue","applyUpdates","dragger","diameter","left","dragger2Callback","e","preventDefault","xPrev","clientX","yPrev","clientY","mousemove","diffx","diffy","newx","newy","getBoundingClientRect","abs","addEventListener","removeEventListener","once","draggerCallback","diff","newValue","colorInputCallback","input","val","target","last","push","min","mid","max","Array","from","sort","missingColor","parentColor","tan","revCalc","generateColor","initializeSwatch","container","id","red","green","blue","setAttribute","select","innerHTML","initializeDragger2","d2diameter","picker","borderRadius","initializeCanvas","canvasWidth","initializeSlider","sliderWidth","sliderHeight","position","circleDraggerCallback","magnitude2","circleDragger","tangent","scale","radius","spectrumContainer","circleSlider","thickness","setDraggerPosition","fillPixel","initializeCircleSlider_populateBuffer","innerRadius","console","log","initializeCircleSlider_calcColor","rSquare","body","cursor","display","d1diameter","border-radius","initializeDragger","spectrumWidth","dragDiam","initializeCircleSlider"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const format = color => `rgb(${color[0]},${color[1]},${color[2]})`;\n\nexport const create = (tag, parent, props, style) => {\n  const element = document.createElement(tag);\n  Object.assign(element, props);\n  parent.append(element);\n  if (style) Object.assign(element.style, style);\n  return element;\n};\n\nexport const calcColor = status => {\n    const progress = status / slider.height * 6;\n    let inc = 255 * (progress - Math.floor(progress));\n\n    switch (Math.floor(progress)){\n      case 0:\n        return [255, inc, 0]\n      case 1:\n        return [255-inc, 255, 0]\n      case 2:\n        return [0, 255, inc]\n      case 3:\n        return [0, 255-inc, 255]\n      case 4:\n        return [inc, 0, 255]\n      case 5:\n        return [255, 0, 255-inc]\n      case 6:\n        return [255, 0, 0]\n    }\n}\n\nexport const revCalc = color => {\n  let progress;\n\n  if (color[0] === 255 && color[2] === 0){\n    progress = 0 + color[1]/255;\n  }else if (color[1] === 255 && color[2] === 0){\n    progress = 1 + 1 - color[0]/255;\n  }else if (color[1] === 255 && color[0] === 0){\n    progress = 2 + color[2]/255;\n  }else if (color[2] === 255 && color[0] === 0){\n    progress = 3 + 1 - color[1]/255;\n  }else if (color[2] === 255 && color[1] === 0){\n    progress = 4 + color[0]/255;\n  }else if (color[0] === 255 && color[1] === 0){\n    progress = 5 + 1 - color[2]/255;\n  }\n\n  return progress;\n}\n\nexport const generateColor = color => {\n  const canvas = document.getElementById('canvas');\n\n  let [min,mid,max] = Array.from(color).sort((x,y)=> x-y);\n  const r = max / 255;\n  const theta = min / max;\n  const missingColor = 255 * (mid - min) / (max - min);\n\n  let parentColor = [];\n  if (max !== min){\n    color.forEach(hue =>{\n      switch (hue){\n        case max: parentColor.push(255); break;\n        case min: parentColor.push(0); break;\n        default: parentColor.push(missingColor); break;\n      }\n    });\n  } else {\n    parentColor = canvas.color\n  }\n\n  const theta0 = Math.PI/3 - (Math.PI/3 * theta);\n  let x = Math.sqrt(3) * max * canvas.width /2 /255 /Math.cos(Math.PI/6-theta0) /Math.sqrt(1+ Math.tan(theta0) * Math.tan(theta0));\n  let y = canvas.height - x * Math.tan(theta0);\n\n  if (max === 0){\n    x = 0;\n    y = canvas.height;\n  } else if (min === 255){\n    x = canvas.width;\n    y = canvas.height;\n  }\n\n  const status = revCalc(parentColor)*canvas.height/6;\n\n  return {x, y, status};\n\n};\n","import { format } from '../utils';\n\nexport const updateCanvas = color => {\n\n  const canvas = document.getElementById('canvas');\n  const ctx = canvas.getContext('2d');\n  canvas.color = color;\n\n  const buffer = ctx.createImageData(canvas.width, canvas.height);\n\n  populateBuffer(buffer);\n  ctx.putImageData(buffer, 0, 0);\n  antiAlias(canvas);\n};\n\nconst populateBuffer = (buffer) => {\n  const {width, height, color} = document.getElementById('canvas');\n\n  for (let i=0; i<(height * width); i++) {\n    const top = Math.floor(i / width);\n    const left = Math.floor(i % width);\n\n    const xp = left;\n    const yp = height - top;\n\n    let theta0 = Math.atan(yp/xp);\n    const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n    //map radial coordinates [0, pi/3] -> [1, 0]\n\n    let r = Math.sqrt(xp*xp + yp*yp)/canvas.width;\n    r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2)\n    //map pie wedge to equilateral triangle by flattening arc\n\n    if (theta < 0 || theta > 1 || r > 1){\n    }else{\n      buffer.data[i*4 + 0] =\n        (color[0] + (255-color[0])*theta) * r;\n      buffer.data[i*4 + 1] =\n        (color[1] + (255-color[1])*theta) * r;\n      buffer.data[i*4 + 2] =\n        (color[2] + (255-color[2])*theta) * r;\n      buffer.data[i*4 + 3] = 255;\n    }\n  }\n};\n\n\nconst antiAlias = (canvas) => {\n  const ctx = canvas.getContext('2d');\n\n  const g1 = ctx.createLinearGradient(0, 0, canvas.width/2, 0);\n  g1.addColorStop(0, 'black');\n  g1.addColorStop(1, format(canvas.color));\n\n  const g2 = ctx.createLinearGradient(canvas.width/2, 0, canvas.width, 0);\n  g2.addColorStop(0, format(canvas.color));\n  g2.addColorStop(1, 'white');\n\n  ctx.beginPath();\n    ctx.moveTo(1, canvas.height -.5);\n    ctx.lineTo(canvas.width/2 + .5, .5);\n    ctx.strokeStyle = g1;\n    ctx.stroke();\n  ctx.closePath();\n\n  ctx.beginPath();\n    ctx.moveTo(canvas.width/2 + .5, .5);\n    ctx.lineTo(canvas.width, canvas.height -.5);\n    ctx.strokeStyle = g2;\n    ctx.stroke();\n  ctx.closePath();\n};\n","import { format } from '../utils'\n\nexport const updateDragger2 = () => {\n\n    const xp = dragger2.x;\n    const yp = canvas.height - dragger2.y;\n\n    let theta0 = Math.atan(yp/xp);\n    const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n\n    let r = Math.sqrt(xp*xp + yp*yp)/canvas.width;\n    r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2);\n\n    let R = Math.round((canvas.color[0] + (255-canvas.color[0])*theta) * r) || 0;\n    let G = Math.round((canvas.color[1] + (255-canvas.color[1])*theta) * r) || 0;\n    let B = Math.round((canvas.color[2] + (255-canvas.color[2])*theta) * r) || 0;\n\n    dragger2.color = [R,G,B];\n    dragger2.style.background = format([R,G,B]);\n}\n","import { format } from '../utils'\n\nexport const updateSwatch = () => {\n  const swatch = document.getElementById('swatch');\n  swatch.style.background = format(dragger2.color);\n  const sat = dragger2.color.reduce((acc,el) => acc += el)-255;\n  swatch.style.color = (sat < 255*3/2 ? 'white' : 'black');\n  dragger2.color.forEach((hue,i)=>{\n    const input = document.getElementById(`color-${i}`);\n    input.value = hue;\n  });\n};\n","import { format, calcColor } from './utils';\nimport { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\n\n\nexport const applyUpdates = ({x, y, status}) => {\n\n  if (typeof(status) !== 'undefined') {\n    dragger.status = +status;\n    dragger.style.background = format(calcColor(status));\n    updateCanvas(calcColor(status));\n    dragger.style.top = dragger.status - dragger.diameter/2 + 'px';\n  }\n\n  if (typeof(x) !== 'undefined') {\n    dragger2.x = x;\n    dragger2.style.left = dragger2.x - dragger2.diameter/2 + 'px';\n  }\n\n  if (typeof(y) !== 'undefined') {\n    dragger2.y = y;\n    dragger2.style.top = dragger2.y - dragger2.diameter/2 + 'px';\n  }\n\n  updateDragger2();\n  updateSwatch();\n\n}\n","import { applyUpdates } from '../applyUpdates';\n\nexport const dragger2Callback = e => {\n\n  e.preventDefault();\n  let xPrev = e.clientX;\n  let yPrev = e.clientY;\n  //document.body.style.cursor = grabbing;\n\n  const mousemove = e => {\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n    const newx = dragger2.x + diffx;\n    const newy = dragger2.y + diffy;\n\n    const box = canvas.getBoundingClientRect();\n\n\n\n    let x, y;\n\n    if (-canvas.height*(2*newx/canvas.width - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.width/2 * (1 - newy/canvas.height)\n      }else{\n        x = newx;\n        y = -canvas.height*(2*newx/canvas.width - 1);\n      }\n    }else if(canvas.height*(2*newx/canvas.width - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.width/2 * (newy/canvas.height + 1)\n      }else{\n        x = newx;\n        y = canvas.height*(2*newx/canvas.width - 1);\n      }\n    }else{\n      x = newx;\n      y = newy;\n    }\n\n    //edge case clearance\n\n    if (y > canvas.height){\n      y = canvas.height;\n    }else if (y < 0){\n      y = 0;\n    }\n\n    if (x > canvas.width){\n      x = canvas.width;\n    } else if (x < 0){\n      x = 0;\n    }\n\n    if (newy < 0){\n      y = 0;\n      x = canvas.width/2;\n    }\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n\n    applyUpdates({x,y})\n  };\n\n  document.addEventListener('mousemove', mousemove);\n\n  document.addEventListener('mouseup',()=>{\n      document.removeEventListener('mousemove', mousemove);\n    },{\n      once:true\n    }\n  );\n\n}\n","import { applyUpdates } from '../applyUpdates'\n\n\nexport const draggerCallback = e => {\n  e.preventDefault();\n  let y = e.clientY;\n\n  const mousemove = e => {\n\n    const diff = e.clientY - y;\n    const newValue = dragger.status + diff;\n\n    if (newValue > slider.height){\n      status = slider.height;\n    } else if (newValue < 0) {\n      status = 0;\n    } else {\n      status = newValue;\n      y = e.clientY;\n    }\n\n    applyUpdates({status});\n  };\n\n  const mouseup = e => {\n    document.removeEventListener('mousemove', mousemove);\n  };\n\n  document.addEventListener('mousemove', mousemove);\n  document.addEventListener('mouseup', mouseup, {once: true});\n\n}\n","import { format, calcColor, revCalc, generateColor } from '../utils';\nimport { applyUpdates } from '../applyUpdates';\n\nexport const colorInputCallback = e => {\n    const color = [];\n    for (let i = 0; i < 3; i++) {\n      const input = document.getElementById(`color-${i}`);\n      let val = +input.value;\n      if (input === e.target && !(val >= 0 && val <= 255)){\n        input.value = input.last;\n        return;\n      };\n      color.push(val);\n      input.last = val;\n    }\n    applyUpdates(generateColor(color))\n  };\n","import { format, create } from '../utils';\nimport { colorInputCallback } from '../listeners/colorInputCallback';\n\n\nexport const initializeSwatch = () => {\n  const swatch =\n    create('DIV', container, {\n      id: 'swatch'\n    },{\n      background: format(canvas.color)\n    });\n\n    const red = document.createElement('INPUT');\n    red.id = 'color-0';\n    const green = document.createElement('INPUT');\n    green.id = 'color-1';\n    const blue = document.createElement('INPUT');\n    blue.id = 'color-2';\n\n    [red,green,blue].forEach(input => {\n      input.setAttribute('size', 3);\n      input.addEventListener('input',colorInputCallback);\n      input.addEventListener('focus',e=>e.target.select())\n    })\n\n    create('SPAN', swatch, {innerHTML: 'rgb('});\n    swatch.append(red);\n    create('SPAN', swatch, {innerHTML: ','});\n    swatch.append(green);\n    create('SPAN', swatch, {innerHTML: ','});\n    swatch.append(blue);\n    create('SPAN', swatch, {innerHTML: ')'});\n}\n","import { create } from '../utils';\nimport { dragger2Callback } from '../listeners/dragger2Callback';\n\n\nexport const initializeDragger2 = (d2diameter) => {\n  const dragger2 =\n    create('DIV', picker, {\n      id: 'dragger2',\n      color: canvas.color,\n      diameter: d2diameter,\n      x: canvas.width/2,\n      y: 0,\n    },{\n      height: d2diameter + 'px',\n      width: d2diameter + 'px',\n      borderRadius: '50%',\n      left: (canvas.width - d2diameter)/2 + 'px',\n      top: -d2diameter/2 + 'px'\n    });\n    dragger2.addEventListener('mousedown', dragger2Callback);\n};\n","import { create } from '../utils';\nimport { updateCanvas } from '../updaters/updateCanvas';\n\nexport const initializeCanvas = (canvasWidth) => {\n  const canvas = create('CANVAS', picker, {\n    id: 'canvas',\n    height: Math.round(canvasWidth*Math.sqrt(3)/2),\n    width: canvasWidth,\n  });\n\n  updateCanvas([255, 0, 0, 255]);\n  const ctx = canvas.getContext('2d');\n}\n","import { create } from '../utils';\n\nexport const initializeSlider = (sliderWidth, sliderHeight) => {\n  const slider =\n    create('DIV', container, {\n      id: 'slider',\n      height: sliderHeight,\n      width: sliderWidth\n    },{\n      position: 'relative',\n      width: sliderWidth + 'px',\n      height: sliderHeight + 'px'\n    });\n}\n","export const circleDraggerCallback = e => {\n  let [ xPrev, yPrev ] = [ e.clientX, e.clientY ];\n\n  const mousemove = e => {\n\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n\n\n    const m = [diffx, -diffy];\n\n    const magnitude2 =\n      circleDragger.y*circleDragger.y + circleDragger.x*circleDragger.x;\n    const tangent = [-circleDragger.y, circleDragger.x];\n    const scale = (m[0]*tangent[0] + m[1]*tangent[1])/magnitude2;\n\n\n    let x, y;\n\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    if (Math.abs(tangent[0]) > Math.abs(tangent[1])){\n      x = circleDragger.x + tangent[0]*scale;\n      if (circleDragger.y > circleDragger.x){\n        y = Math.sqrt(radius*radius - x * x);\n      } else {\n        y = -Math.sqrt(radius*radius - x * x);\n      }\n    }else{\n      y = circleDragger.y + tangent[1]*scale;\n      if (-Math.abs(circleDragger.y) < circleDragger.x){\n        x = Math.sqrt(radius*radius - y * y)\n      } else {\n        x = -Math.sqrt(radius*radius - y * y)\n      }\n    }\n\n\n\n    // const x = circleDragger.x + tangent[0]*scale;\n    // const y = circleDragger.y + tangent[1]*scale;\n    setDraggerPosition({x, y});\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n\n\n    document.addEventListener('mouseup', ()=>{\n      document.removeEventListener('mousemove', mousemove)\n    },{once: true})\n\n\n  }\n\n  document.addEventListener('mousemove', mousemove)\n}\n\nconst setDraggerPosition = ({ x, y }) => {\n  const left = (x + spectrumContainer.width/2) - circleDragger.diameter/2;\n  const top = (spectrumContainer.width/2 - y) - circleDragger.diameter/2;\n\n\n  circleDragger.x = x;\n  circleDragger.y = y;\n  circleDragger.style.left = left + 'px';\n  circleDragger.style.top = top + 'px';\n}\n","import { create } from '../utils';\nimport { circleDraggerCallback } from '../listeners/circleDraggerCallback'\n\n\nexport const initializeCircleSlider = (canvasWidth, spectrumWidth, dragDiam) => {\n  const spectrumContainer = create('DIV', document.body,{\n    id: 'spectrumContainer',\n    width: canvasWidth\n  },{\n    height: canvasWidth + 'px',\n    width: canvasWidth + 'px',\n    position: 'relative'\n  })\n\n  const circleSlider = create('CANVAS', spectrumContainer, {\n    id: 'circleSlider',\n    height: canvasWidth,\n    width: canvasWidth,\n    thickness: spectrumWidth\n  });\n\n  const circleDragger = create('DIV', spectrumContainer, {\n    id: 'circleDragger',\n    diameter: dragDiam,\n    x: 0,\n    y: canvasWidth/2\n  },{\n    height: dragDiam + 'px',\n    width: dragDiam + 'px',\n    'border-radius': '50%',\n    background: 'white',\n    position: 'absolute',\n    top: (spectrumWidth - dragDiam)/2 + 'px',\n    left: (canvasWidth - dragDiam)/2 + 'px'\n  })\n  circleDragger.addEventListener('mousedown', circleDraggerCallback);\n\n  const ctx2 = circleSlider.getContext('2d');\n\n  const buffer = ctx2.createImageData(canvasWidth, canvasWidth);\n  populateBuffer(buffer, 1 - spectrumWidth*2/canvasWidth);\n}\n\n\n\nconst fillPixel = (buffer, i, color) => {\n  buffer.data[i*4 + 0] = color[0];\n  buffer.data[i*4 + 1] = color[1];\n  buffer.data[i*4 + 2] = color[2];\n  buffer.data[i*4 + 3] = 255;\n};\n\n\nconst populateBuffer = (buffer, innerRadius) => {\n  console.log(innerRadius);\n  let deadPixels = [];\n\n  let leftAlias = [];\n  let topAlias = [];\n  let rightAlias = [];\n  let bottomAlias = [];\n\n  for (let i = 0; i < circleSlider.width * circleSlider.width; i++){\n\n    let left = i % circleSlider.width;\n    const x = (left / circleSlider.height) * 2 - 1;\n\n    let top = circleSlider.height - Math.floor(i / circleSlider.width);\n    const y = (top / circleSlider.height) * 2 - 1;\n\n\n    let progress=0;\n    if (x < 0){\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3;\n    } else {\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3 + 3;\n    }\n\n    const color = calcColor(progress);\n\n    const rSquare = x*x + y*y;\n    if ( rSquare < 1 && rSquare > innerRadius* innerRadius){\n      // if (deadPixels[i-1]) leftAlias[i] = {x, y};\n      // if (deadPixels[i-circleSlider.width]) topAlias[i] = {x, y};\n      fillPixel(buffer,i,color)\n    }\n    // else{\n    //   deadPixels[i] = true;\n    //   if (!deadPixels[i-1]) rightAlias[i-1] = { x, y };\n    //   if (!deadPixels[i-circleSlider.width]) bottomAlias[i-circleSlider.width] = { x, y };\n    // }\n  }\n\n  const ctx = circleSlider.getContext('2d');\n  ctx.putImageData(buffer,0,0);\n}\n\n\n\n\n\n//TODO find boundary. if x < 0 find error. if x > 0 find error next time.\n//TODO find negative boundary. figure out where to place.\n\n\nexport const calcColor = progress => {\n    let inc = 255 * (progress - Math.floor(progress));\n\n    switch (Math.floor(progress)){\n      case 0:\n        return [255, inc, 0]\n      case 1:\n        return [255-inc, 255, 0]\n      case 2:\n        return [0, 255, inc]\n      case 3:\n        return [0, 255-inc, 255]\n      case 4:\n        return [inc, 0, 255]\n      case 5:\n        return [255, 0, 255-inc]\n      case 6:\n        return [255, 0, 0]\n    }\n}\n\n\n//\n// for (let i=0; i < circleSlider.width * circleSlider.width; i++){\n//\n//   let x, y, radius, coordShould, err;\n//   if (bottomAlias[i]) {\n//     ({ x, y } = bottomAlias[i]);\n//     radius = (y < 0 ? 1 : Math.sqrt(.7) );\n//     coordShould = Math.sqrt(radius*radius - x*x);\n//     err = 1 - Math.abs(Math.abs(y) - coordShould)*circleSlider.height;\n//\n//\n//   } else\n//   if (topAlias[i]) {\n//     ({ x, y } = topAlias[i]);\n//     radius = (y > 0 ? 1 : Math.sqrt(.7) );\n//     coordShould = Math.sqrt(radius*radius - x*x);\n//     err = Math.abs(Math.abs(y) - coordShould)*circleSlider.height;\n//\n//   } else\n//   if (leftAlias[i]) {\n//     ({ x, y } = leftAlias[i]);\n//     radius = (x < 0 ? 1 : Math.sqrt(.7) );\n//     coordShould = Math.sqrt(radius*radius - y*y);\n//     err = Math.abs(Math.abs(x) - coordShould)*circleSlider.height;\n//\n//   } else\n//   if (rightAlias[i]) {\n//     ({ x, y } = rightAlias[i]);\n//     radius = (x > 0 ? 1 : Math.sqrt(.7) );\n//     coordShould = Math.sqrt(radius*radius - y*y);\n//     err = 1 - Math.abs(Math.abs(x) - coordShould)*circleSlider.height;\n//   } else {\n//     continue;\n//   }\n//\n//   let a = 255 * err;\n//   if (a < 0) a = 0;\n//\n//   buffer.data[i*4 + 3] = a;\n// }\n","import { initialize } from './initialize'\n\n\n\n\n//const grab = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), default';\n//const grabbing = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/closedhand.cur), default';\n\n\ndocument.addEventListener('DOMContentLoaded', initialize);\n","import { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\n\nimport { format, calcColor, create } from './utils'\n\nimport { dragger2Callback } from './listeners/dragger2Callback';\nimport { draggerCallback } from './listeners/draggerCallback';\n\nimport { initializeSwatch } from './initializers/initializeSwatch';\nimport { initializeDragger } from './initializers/initializeDragger';\nimport { initializeDragger2 } from './initializers/initializeDragger2';\nimport { initializeCanvas } from './initializers/initializeCanvas';\nimport { initializeSlider } from './initializers/initializeSlider';\n\nimport { initializeCircleSlider } from './initializers/initializeCircleSlider';\n\n\n\n\nexport const initialize = () => {\n\n  const d1diameter = 20;\n  const d2diameter = 30;\n  const sliderWidth = 10;\n  const canvasWidth = 200;\n  const sliderHeight = Math.round(canvasWidth*Math.sqrt(3)/2);\n\n  document.body.style.cursor = 'default';\n\n  const container =\n    create('DIV',document.body,{id: 'container'},{display: 'flex'});\n\n  const picker =\n    create('DIV', container, {id:'picker'});\n\n  initializeCanvas(canvasWidth);\n  initializeSlider(sliderWidth,sliderHeight);\n  initializeDragger2(d2diameter);\n  initializeDragger(d1diameter);\n  initializeSwatch();\n\n  initializeCircleSlider(300, 20, 15);\n\n  updateDragger2();\n  updateSwatch();\n}\n","import { create, format } from '../utils'\nimport { draggerCallback } from '../listeners/draggerCallback'\n\nexport const initializeDragger = (d1diameter) => {\n  const dragger =\n    create('DIV', slider, {\n      id: 'dragger',\n      status: 0,\n      diameter: d1diameter\n    },{\n      height: d1diameter + 'px',\n      width: d1diameter + 'px',\n      'border-radius': '50%',\n      top: -d1diameter/2 + 'px',\n      left: -(d1diameter-slider.width)/2 + 'px',\n      position: 'absolute',\n      background: format(canvas.color)\n    });\n  dragger.addEventListener('mousedown', draggerCallback);\n}\n"],"sourceRoot":""}