{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascripts/slider/utils.js","webpack:///./javascripts/slider/updaters/updateCanvas.js","webpack:///./javascripts/slider/updaters/updateSwatch.js","webpack:///./javascripts/slider/updaters/updateTrioDraggers.js","webpack:///./javascripts/slider/listeners/circleDraggerCallback.js","webpack:///./javascripts/slider/applyUpdates.js","webpack:///./javascripts/slider/updaters/updateDragger2.js","webpack:///./javascripts/slider/listeners/dragger2Callback.js","webpack:///./javascripts/slider/listeners/colorInputCallback.js","webpack:///./javascripts/slider/archive/draggerCallback.js","webpack:///./javascripts/slider/initializers/initializeSwatch.js","webpack:///./javascripts/slider/initializers/initializeCircleSlider.js","webpack:///./javascripts/slider/slider.js","webpack:///./javascripts/slider/initialize.js","webpack:///./javascripts/slider/initializers/initializeCanvas.js","webpack:///./javascripts/slider/initializers/initializeDragger2.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","format","color","tag","parent","props","style","element","document","createElement","assign","append","calcColor","progress","inc","Math","floor","updateCanvas","canvas","getElementById","ctx","getContext","clearRect","width","height","buffer","createImageData","innerWidth","innerHeight","populateBuffer","putImageData","padding","outline","triangleCoords","antiAliased","coordsCalculated","calculateCoords","top","x","y","xAvg","yAvg","theta0","atan","theta","PI","sqrt","cos","red","green","blue","data","beginPath","fillStyle","arc","fill","b2w","createLinearGradient","addColorStop","rect","borderRadius","r2w","moveTo","lineTo","sin","r2b","updateSwatch","swatch","background","dragger2","R","G","B","sat","forEach","hue","updateTrioDraggers","colorTrio","status","redDragger","greenDragger","blueDragger","left","diameter","redProgress","greenProgress","blueProgress","circleDraggerCallback","e","preventDefault","xPrev","yPrev","clientX","clientY","circlePip","body","classList","add","mousemove","magnitude2","circleDragger","tangent","scale","radius","spectrumContainer","circleSlider","thickness","abs","setDraggerPosition","addEventListener","removeEventListener","remove","once","updateDragger2","applyUpdates","triangleDragger","console","log","xp","yp","round","pip","dragger2Callback","diffx","diffy","newx","newy","colorInputCallback","input","val","target","last","push","min","mid","max","Array","from","sort","missingColor","parentColor","tan","revCalc","generateColor","draggerCallback","slider","redSlider","dragger","redPip","greenSlider","greenPip","blueSlider","bluePip","diff","newValue","initializeSwatch","containerWidth","container","id","position","border-radius","select","inputContainer","innerHTML","sliderStyle","margin","draggerStyle","pipStyle","bottom","right","z-index","transition","box-shadow","trackStyle","initializeCircleSlider","canvasWidth","spectrumWidth","dragDiam","spectrumContainerOuter","outer","calcXsects","inner","initializeCircleSlider_populateBuffer","fillPixel","curve","innerRadius","rSquare","initializeCircleSlider_antiAlias","xsects","coord","collision","convex","keys","length","orientation","orient","initializeCircleSlider_setOpacity","initializeCircleSlider_n","number","opacity","some","el","cursor","display","triangleContainer","initializeCanvas","d2diameter","initializeDragger2","circleSliderWidth"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const format = color => `rgb(${color[0]},${color[1]},${color[2]})`;\n\nexport const create = (tag, parent, props, style) => {\n  const element = document.createElement(tag);\n  Object.assign(element, props);\n  parent.append(element);\n  if (style) Object.assign(element.style, style);\n  return element;\n};\n\nexport const calcColor = progress => {\n    let inc = 255 * (progress - Math.floor(progress));\n\n    switch (Math.floor(progress)){\n      case 0:\n        return [255, inc, 0]\n      case 1:\n        return [255-inc, 255, 0]\n      case 2:\n        return [0, 255, inc]\n      case 3:\n        return [0, 255-inc, 255]\n      case 4:\n        return [inc, 0, 255]\n      case 5:\n        return [255, 0, 255-inc]\n      case 6:\n        return [255, 0, 0]\n    }\n}\n\nexport const revCalc = color => {\n  let progress;\n\n  if (color[0] === 255 && color[2] === 0){\n    progress = 0 + color[1]/255;\n  }else if (color[1] === 255 && color[2] === 0){\n    progress = 1 + 1 - color[0]/255;\n  }else if (color[1] === 255 && color[0] === 0){\n    progress = 2 + color[2]/255;\n  }else if (color[2] === 255 && color[0] === 0){\n    progress = 3 + 1 - color[1]/255;\n  }else if (color[2] === 255 && color[1] === 0){\n    progress = 4 + color[0]/255;\n  }else if (color[0] === 255 && color[1] === 0){\n    progress = 5 + 1 - color[2]/255;\n  }\n\n  return progress;\n}\n\nexport const generateColor = color => {\n  const canvas = document.getElementById('canvas');\n\n  let [min,mid,max] = Array.from(color).sort((x,y)=> x-y);\n  const r = max / 255;\n  const theta = min / max;\n  const missingColor = 255 * (mid - min) / (max - min);\n\n  let parentColor = [];\n  if (max !== min){\n    color.forEach(hue =>{\n      switch (hue){\n        case max: parentColor.push(255); break;\n        case min: parentColor.push(0); break;\n        default: parentColor.push(missingColor); break;\n      }\n    });\n  } else {\n    parentColor = canvas.color\n  }\n\n  const theta0 = Math.PI/3 - (Math.PI/3 * theta);\n  let x = Math.sqrt(3) * max * canvas.innerWidth /2 /255 /Math.cos(Math.PI/6-theta0) /Math.sqrt(1+ Math.tan(theta0) * Math.tan(theta0));\n  let y = canvas.innerHeight - x * Math.tan(theta0);\n\n  if (max === 0){\n    x = 0;\n    y = canvas.innerHeight;\n  } else if (min === 255){\n    x = canvas.innerWidth;\n    y = canvas.innerHeight;\n  }\n\n  const progress = revCalc(parentColor)*Math.PI/3;\n  const triangleDragger = {x,y};\n  const colorTrio = {red: color[0]/255*200, green: color[1]/255*200, blue: color[2]/255*200};\n  return {triangleDragger, progress, colorTrio};\n\n};\n","import { format } from '../utils';\n\nexport const updateCanvas = color => {\n\n  const canvas = document.getElementById('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0,0,canvas.width,canvas.height);\n\n  canvas.color = color;\n\n  const buffer = ctx.createImageData(canvas.innerWidth, canvas.innerHeight);\n\n  populateBuffer(buffer);\n  ctx.putImageData(buffer, canvas.padding, canvas.padding);\n  outline(buffer);\n\n};\n\n\nconst XtoY = x => {\n  return x < 0 ?\n    Math.sqrt(3) * (canvas.innerWidth/2 + x) :\n    Math.sqrt(3) * (canvas.innerWidth/2 - x)\n}\n\nconst YtoX = y => {\n    return - y / Math.sqrt(3) + canvas.innerWidth/2\n}\n\n\nconst alii = {};\nconst triangleCoords = {};\n\nlet antiAliased = false;\nlet coordsCalculated = false;\n\n\n//TODO: cache theta & r for i to improve speed\nconst calculateCoords = i => {\n  const top = Math.floor(i / canvas.innerWidth);\n  const left = Math.floor(i % canvas.innerWidth);\n\n  const x = left;\n  const y = canvas.innerHeight - top -1;\n  //TODO -1 FOR pixel misalignment with rounded border\n\n  const xAvg = x + .5;\n  const yAvg = y - .5\n\n  let theta0 = Math.atan(yAvg/xAvg);\n  const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n  //map radial coordinates [0, pi/3] -> [1, 0]\n\n  let r = Math.sqrt(xAvg*xAvg + yAvg*yAvg)/canvas.innerWidth;\n  r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2)\n  //map pie wedge to equilateral triangle by flattening arc\n  triangleCoords[i] = {x,y,theta,r};\n  return {x,y,theta,r};\n}\n\n\n\n//TODO TODO: just iterating thru buffer is causing lag.\n//possible to stop iterating through dead points?\n//possible also to set opacity on black and white but have a bg color set\n//to canvas.color? native algorithms may be faster.\n\nconst populateBuffer = (buffer) => {\n  const [red, green, blue] = canvas.color;\n\n  for (let i=0; i<(canvas.innerHeight * canvas.innerWidth); i++) {\n\n    let x,y,theta,r;\n    if (coordsCalculated){\n      ({x,y,theta,r} = triangleCoords[i])\n    }else{\n      ({x,y,theta,r} = calculateCoords(i))\n    }\n\n    buffer.data[i*4 + 0] =\n      (red + (255 - red) * theta) * r;\n    buffer.data[i*4 + 1] =\n      (green + (255 - green) * theta) * r;\n    buffer.data[i*4 + 2] =\n      (blue  + (255 - blue) * theta) * r;\n    if (!(theta < 0 || theta > 1 || r > 1)){\n      buffer.data[i*4 + 3] = 255;\n    }else{\n      buffer.data[i*4 + 3] = 0;\n    }\n\n    //TODO anti-aliasing turned off\n    // if (antiAliased){\n    //   if (n(alii[i])) buffer.data[i*4 + 3] = alii[i];\n    // } else {\n    //   antiAlias(x-canvas.innerWidth/2, y, buffer, i);\n    // }\n  }\n  antiAliased = true;\n  coordsCalculated = true;\n};\n\n\n\n\n\n//TODO run this only once, calculate all of the XY issues,\n//apply same antiAliasing @ i always\nconst antiAlias = (x, y, buffer, i) => {\n\n  const left = x;\n  const right = x + 1;\n  const top = y;\n  const bottom = y - 1;\n  const collision = {};\n\n  if (\n    left <= YtoX(top) && YtoX(top) <= right ||\n    left <= -YtoX(top) && -YtoX(top) <= right\n     ){\n    //top collision\n    collision.top = x > 0 ? YtoX(top)-left : -YtoX(top)-left;\n  }\n\n  if (\n    left <= YtoX(bottom) && YtoX(bottom) <= right ||\n    left <= -YtoX(bottom) && -YtoX(bottom) <= right\n  ){\n    //bottom collision\n    collision.bottom = x > 0 ? YtoX(bottom)-left : -YtoX(bottom)-left;\n  }\n\n  if (\n    bottom <= XtoY(left) && XtoY(left) <= top\n  ){\n    //left collision\n    collision.left = XtoY(left)-bottom;\n  }\n\n  if (\n    bottom <= XtoY(right) && XtoY(right) <= top\n  ){\n    //right collision\n    collision.right = XtoY(right)-bottom;\n  }\n\n  if (Object.keys(collision).length){\n    const orientation = x >= 0 ?\n      {x: 0, y: 0} : {x: 1, y: 0}\n    setOpacity(collision, orientation, buffer, i, true);\n  }\n};\n\n\nconst n = (number) => typeof(number) === 'number' ? true : false;\nconst setOpacity = ({left,right,top,bottom}, orientation, buffer, i, convex) => {\n  let opacity;\n\n  if (n(left) && n(right)){\n    opacity =\n      orientation.y === 0 ?\n        (left+right)/2 :\n        1 - (left+right)/2\n\n  } else if (n(top) && n(bottom)) {\n    opacity =\n       orientation.x === 0 ?\n         (top+bottom)/2 :\n         1 - (top+bottom)/2\n\n  } else if (n(bottom) && n(left)) {\n    opacity =\n       orientation.x === 0 && orientation.y === 0 ?\n          bottom * left / 2 :\n          1 - bottom * left / 2\n\n  } else if (n(bottom) && n(right)) {\n    opacity =\n       orientation.x === 1 && orientation.y === 0 ?\n          (1-bottom) * right / 2 :\n          1 - (1-bottom) * right /2\n\n  } else if (n(top) && n(left)) {\n    opacity =\n      orientation.x === 0 && orientation.y === 1 ?\n        top * (1-left) / 2 :\n        1 - top * (1-left) / 2\n\n  } else if (n(top) && n(right)) {\n    opacity =\n      orientation.x === 1 && orientation.y === 1 ?\n        (1-top)*(1-right)/2 :\n        1 - (1-top)*(1-right)/2\n\n  }\n\n  if ([left,right,top,bottom].some(el=>n(el))){\n    buffer.data[i*4 + 3] = convex ?\n      opacity * 255 :\n      (1-opacity) * 255;\n\n    alii[i] = buffer.data[i*4 + 3];\n  }\n\n\n}\n\n\n\n\n\n\n\n\n\n\nconst outline = () => {\n\n  const borderRadius = 5;\n  const ctx = canvas.getContext('2d');\n\n  ctx.beginPath();\n  ctx.fillStyle = format(canvas.color);\n  ctx.arc(canvas.width/2, canvas.padding, borderRadius, Math.PI, Math.PI*2);\n  ctx.fill();\n\n  ctx.beginPath();\n  ctx.fillStyle = 'black';\n  ctx.arc(canvas.padding, canvas.height - canvas.padding, borderRadius, Math.PI/3, Math.PI+Math.PI/3);\n  ctx.fill();\n\n  ctx.beginPath();\n  ctx.fillStyle = 'white';\n  ctx.arc(canvas.width - canvas.padding, canvas.height - canvas.padding, borderRadius, -Math.PI/3, Math.PI-Math.PI/3);\n  ctx.fill();\n\n\n  ctx.beginPath();\n  const b2w = ctx.createLinearGradient(\n    canvas.padding, 0,\n    canvas.padding + canvas.innerWidth, 0,\n  );\n  b2w.addColorStop(0,'black');\n  b2w.addColorStop(1,'white');\n  ctx.fillStyle = b2w;\n  ctx.rect(canvas.padding, canvas.height-canvas.padding-1, canvas.innerWidth, borderRadius + 1)\n  ctx.fill();\n\n\n\n  ctx.beginPath();\n  const r2w = ctx.createLinearGradient(\n    canvas.width/2, canvas.padding,\n    canvas.width - canvas.padding, canvas.height - canvas.padding,\n  );\n  r2w.addColorStop(1,'white');\n  r2w.addColorStop(0, format(canvas.color));\n  ctx.fillStyle = r2w;\n  ctx.moveTo(canvas.width/2, canvas.padding);\n  ctx.lineTo(canvas.width-canvas.padding, canvas.height-canvas.padding);\n  ctx.lineTo(canvas.width-canvas.padding + borderRadius*Math.cos(Math.PI/6), canvas.height-canvas.padding - borderRadius*Math.sin(Math.PI/6))\n  ctx.lineTo(canvas.width/2 + borderRadius*Math.cos(Math.PI/6), canvas.padding - borderRadius*Math.sin(Math.PI/6));\n  ctx.lineTo(canvas.width/2, canvas.padding);\n  ctx.fill();\n\n\n\n  ctx.beginPath();\n  const r2b = ctx.createLinearGradient(\n    canvas.width/2, canvas.padding,\n    canvas.padding, canvas.height - canvas.padding,\n  );\n  r2b.addColorStop(1,'black');\n  r2b.addColorStop(0, format(canvas.color));\n  ctx.fillStyle = r2b;\n  ctx.moveTo(canvas.width/2, canvas.padding);\n  ctx.lineTo(canvas.padding, canvas.height-canvas.padding);\n  ctx.lineTo(canvas.padding - borderRadius*Math.cos(Math.PI/6), canvas.height-canvas.padding - borderRadius*Math.sin(Math.PI/6))\n  ctx.lineTo(canvas.width/2 - borderRadius*Math.cos(Math.PI/6), canvas.padding - borderRadius*Math.sin(Math.PI/6));\n  ctx.lineTo(canvas.width/2, canvas.padding);\n  ctx.fill();\n}\n","import { format } from '../utils'\n\nexport const updateSwatch = () => {\n  const swatch = document.getElementById('swatch');\n  swatch.style.background = format(dragger2.color);\n  const [R,G,B] = dragger2.color;\n  const sat =\n    .2126 * R +\n    .7152 * G +\n    .0722 * B ;\n  swatch.style.color = (sat < 255/2 ? 'white' : 'black');\n   dragger2.color.forEach((hue,i)=>{\n     const input = document.getElementById(`color-${i}`);\n     input.value = hue;\n   });\n};\n","import { applyUpdates } from '../applyUpdates';\nimport { generateColor } from '../utils'\n\nexport const updateTrioDraggers = (colorTrio) => {\n  const status = {\n    red: redDragger.status,\n    green: greenDragger.status,\n    blue: blueDragger.status\n  };\n\n  Object.assign(status, colorTrio);\n\n    redDragger.status = status.red;\n    redDragger.style.left = redDragger.status - redDragger.diameter/2 + 'px';\n    redProgress.style.width = redDragger.status + 'px';\n\n    greenDragger.status = status.green;\n    greenDragger.style.left = greenDragger.status - greenDragger.diameter/2 + 'px';\n    greenProgress.style.width = greenDragger.status + 'px';\n\n    blueDragger.status = status.blue;\n    blueDragger.style.left = blueDragger.status - blueDragger.diameter/2 + 'px';\n    blueProgress.style.width = blueDragger.status + 'px';\n}\n","import { updateCanvas } from '../updaters/updateCanvas';\nimport { format, calcColor } from '../utils';\nimport { updateSwatch } from '../updaters/updateSwatch';\nimport { updateDragger2 } from '../updaters/updateDragger2';\nimport { updateTrioDraggers } from '../updaters/updateTrioDraggers'\n\n\nexport const circleDraggerCallback = e => {\n  e.preventDefault();\n  let [ xPrev, yPrev ] = [ e.clientX, e.clientY ];\n  circlePip.style.height = '35px';\n  circlePip.style.width = '35px';\n  circlePip.style['box-shadow'] = '0 8px 8px 0 rgba(0,0,0,.4)';\n  document.body.classList.add('grabbing');\n\n  const mousemove = e => {\n\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n\n    const m = [diffx, -diffy];\n\n    const magnitude2 =\n      circleDragger.y*circleDragger.y + circleDragger.x*circleDragger.x;\n    const tangent = [-circleDragger.y, circleDragger.x];\n    const scale = (m[0]*tangent[0] + m[1]*tangent[1])/magnitude2;\n\n\n    let x, y;\n\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    if (Math.abs(tangent[0]) > Math.abs(tangent[1])){\n      x = circleDragger.x + tangent[0]*scale;\n      if (circleDragger.y > circleDragger.x){\n        y = Math.sqrt(radius*radius - x * x);\n      } else {\n        y = -Math.sqrt(radius*radius - x * x);\n      }\n    }else{\n      y = circleDragger.y + tangent[1]*scale;\n      if (-Math.abs(circleDragger.y) < circleDragger.x){\n        x = Math.sqrt(radius*radius - y * y)\n      } else {\n        x = -Math.sqrt(radius*radius - y * y)\n      }\n    }\n\n\n    //fix fast-drag errors\n    if (Math.abs(x) > radius){\n      x = radius;\n      y = 0;\n    }\n    if (Math.abs(y) > radius){\n      y = radius;\n      x = 0;\n    }\n\n    setDraggerPosition({x, y});\n\n\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n  }\n\n  document.addEventListener('mousemove', mousemove);\n  document.addEventListener('mouseup', ()=>{\n    document.removeEventListener('mousemove', mousemove);\n    document.body.classList.remove('grabbing')\n    circlePip.style.height = circlePip.diameter + 'px';\n    circlePip.style.width = circlePip.diameter + 'px';\n    circlePip.style['box-shadow'] = '0 2px 2px 0 rgba(0,0,0,.4)';\n  },{once: true})\n\n}\n\nexport const setDraggerPosition = ({ x, y }) => {\n  const left = (x + spectrumContainer.width/2) - circleDragger.diameter/2;\n  const top = (spectrumContainer.width/2 - y) - circleDragger.diameter/2;\n\n\n  let theta;\n  if (x < 0){\n    theta = Math.atan(y/x) + Math.PI/2;\n  } else {\n    theta = Math.atan(y/x) + 3/2 * Math.PI;\n  }\n\n  const progress = 3 * theta / Math.PI;\n  const color = calcColor(progress);\n  circleDragger.x = x;\n  circleDragger.y = y;\n  circleDragger.style.left = left + 'px';\n  circleDragger.style.top = top + 'px';\n  circlePip.style.background = format(color);\n\n  updateCanvas(calcColor(progress));\n  updateDragger2();\n  updateTrioDraggers({\n    red: dragger2.color[0]/255*200,\n    green: dragger2.color[1]/255*200,\n    blue: dragger2.color[2]/255*200\n  });\n  updateSwatch();\n}\n","import { format, calcColor,revCalc } from './utils';\nimport { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\nimport { setDraggerPosition } from './listeners/circleDraggerCallback';\nimport { updateTrioDraggers } from './updaters/updateTrioDraggers'\n\n\nexport const applyUpdates = ({triangleDragger, progress, colorTrio}) => {\n\n  if (typeof(progress) !== 'undefined') {\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    const x = Math.cos(progress + Math.PI/2) * radius;\n    const y = Math.sin(progress + Math.PI/2) * radius;\n    setDraggerPosition({x, y});\n  }\n\n  if (typeof(triangleDragger) !== 'undefined') {\n    dragger2.x = triangleDragger.x;\n    dragger2.style.left = dragger2.x - dragger2.diameter/2 + 'px';\n    dragger2.y = triangleDragger.y;\n    dragger2.style.top = dragger2.y - dragger2.diameter/2 + 'px';\n  }\n\n  if (typeof(colorTrio) !== 'undefined') {\n    console.log(colorTrio);\n    updateTrioDraggers(colorTrio);\n  }\n\nupdateDragger2();\nupdateSwatch();\nupdateTrioDraggers({\n  red: dragger2.color[0]/255*200,\n  green: dragger2.color[1]/255*200,\n  blue: dragger2.color[2]/255*200\n});\n\n}\n","import { format } from '../utils';\nimport { applyUpdates } from '../applyUpdates';\n\nexport const updateDragger2 = () => {\n\n    const xp = dragger2.x;\n    const yp = canvas.innerHeight - dragger2.y;\n\n    let theta0 = Math.atan(yp/xp);\n    const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n\n    let r = Math.sqrt(xp*xp + yp*yp)/canvas.innerWidth;\n    r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2);\n\n    let R = Math.round((canvas.color[0] + (255-canvas.color[0])*theta) * r) || 0;\n    let G = Math.round((canvas.color[1] + (255-canvas.color[1])*theta) * r) || 0;\n    let B = Math.round((canvas.color[2] + (255-canvas.color[2])*theta) * r) || 0;\n\n    dragger2.color = [R,G,B];\n    pip.style.background = format([R,G,B]);\n}\n","import { applyUpdates } from '../applyUpdates';\n\nexport const dragger2Callback = e => {\n\n  e.preventDefault();\n  let xPrev = e.clientX;\n  let yPrev = e.clientY;\n\n  pip.style.width = '35px';\n  pip.style.height = '35px';\n  pip.style['box-shadow'] = '0 8px 8px 0 rgba(0,0,0,.4)';\n\n  document.body.classList.add('grabbing');\n  // pip.classList.remove('animate');  //TODO animate\n\n  const mousemove = e => {\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n    const newx = dragger2.x + diffx;\n    const newy = dragger2.y + diffy;\n\n\n\n    let x, y;\n\n    if (-canvas.innerHeight*(2*newx/canvas.innerWidth - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.innerWidth/2 * (1 - newy/canvas.innerHeight)\n      }else{\n        x = newx;\n        y = -canvas.innerHeight*(2*newx/canvas.innerWidth - 1);\n      }\n    }else if(canvas.innerHeight*(2*newx/canvas.innerWidth - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.innerWidth/2 * (newy/canvas.innerHeight + 1)\n      }else{\n        x = newx;\n        y = canvas.innerHeight*(2*newx/canvas.innerWidth - 1);\n      }\n    }else{\n      x = newx;\n      y = newy;\n    }\n\n    //edge case clearance\n\n    if (y > canvas.innerHeight){\n      y = canvas.innerHeight;\n    }else if (y < 0){\n      y = 0;\n    }\n\n    if (x > canvas.innerWidth){\n      x = canvas.innerWidth;\n    } else if (x < 0){\n      x = 0;\n    }\n\n    if (newy < 0){\n      y = 0;\n      x = canvas.innerWidth/2;\n    }\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n\n    const triangleDragger = {x,y};\n    applyUpdates({triangleDragger})\n  };\n\n  document.addEventListener('mousemove', mousemove);\n\n  document.addEventListener('mouseup',()=>{\n      document.removeEventListener('mousemove', mousemove);\n      document.body.classList.remove('grabbing');\n      pip.style.width = pip.diameter + 'px';\n      pip.style.height = pip.diameter + 'px';\n      pip.style['box-shadow'] = '0 2px 2px 0 rgba(0,0,0,.4)';\n    },{\n      once:true\n    }\n  );\n\n}\n","import { format, calcColor, revCalc, generateColor } from '../utils';\nimport { applyUpdates } from '../applyUpdates';\n\nexport const colorInputCallback = e => {\n    const color = [];\n    for (let i = 0; i < 3; i++) {\n      const input = document.getElementById(`color-${i}`);\n      let val = +input.value;\n      if (input === e.target && !(val >= 0 && val <= 255)){\n        input.value = input.last;\n        return;\n      };\n      color.push(val);\n      input.last = val;\n    }\n    applyUpdates(generateColor(color))\n  };\n","import { applyUpdates } from '../applyUpdates'\n\n\n// export const draggerCallback = e => {\n//   e.preventDefault();\n//   let y = e.clientY;\n//\n//   const mousemove = e => {\n//\n//     const diff = e.clientY - y;\n//     const newValue = dragger.status + diff;\n//\n//     if (newValue > slider.height){\n//       status = slider.height;\n//     } else if (newValue < 0) {\n//       status = 0;\n//     } else {\n//       status = newValue;\n//       y = e.clientY;\n//     }\n//\n//     applyUpdates({status});\n//   };\n//\n//   const mouseup = e => {\n//     document.removeEventListener('mousemove', mousemove);\n//   };\n//\n//   document.addEventListener('mousemove', mousemove);\n//   document.addEventListener('mouseup', mouseup, {once: true});\n//\n// }\n\n\n\nexport const draggerCallback = color => e => {\n  e.preventDefault();\n  let x = e.clientX;\n\n  const data = {\n    red: {\n      slider: redSlider,\n      dragger: redDragger,\n      pip: redPip,\n      key: 'red'\n    },\n    green: {\n      slider: greenSlider,\n      dragger: greenDragger,\n      pip: greenPip,\n      key: 'green'\n    },\n    blue: {\n      slider: blueSlider,\n      dragger: blueDragger,\n      pip: bluePip,\n      key: 'blue',\n    }\n  }\n\n  data[color].pip.style.height = '35px';\n  data[color].pip.style.width = '35px';\n  data[color].pip.style['box-shadow'] = '0 8px 8px 0 rgba(0,0,0,.4)';\n\n  const mousemove = e => {\n\n    const colorTrio = {};\n\n    const diff = e.clientX - x;\n    const newValue = data[color].dragger.status + diff;\n\n    if (newValue > 200){ //TODO these will all be the same, factor out\n      colorTrio[data[color].key] = 200;\n    } else if (newValue < 0) {\n      colorTrio[data[color].key] = 0;\n    } else {\n      colorTrio[data[color].key] = newValue;\n      x = e.clientX;\n    }\n\n    applyUpdates({colorTrio})\n\n  };\n\n  const mouseup = e => {\n    document.removeEventListener('mousemove', mousemove);\n    data[color].pip.style.height = '20px';\n    data[color].pip.style.width = '20px';\n    data[color].pip.style['box-shadow'] = '0 2px 2px 0 rgba(0,0,0,.4)';\n  };\n\n  document.addEventListener('mousemove', mousemove);\n  document.addEventListener('mouseup', mouseup, {once: true});\n\n}\n","import { format, create } from '../utils';\nimport { colorInputCallback } from '../listeners/colorInputCallback';\nimport { draggerCallback } from '../archive/draggerCallback'\n\n\nexport const initializeSwatch = (containerWidth) => {\n  const swatch =\n    create('DIV', container, {\n      id: 'swatch'\n    },{\n      position: 'relative',\n      background: format(canvas.color),\n      height: containerWidth + 'px',\n      width: containerWidth + 'px',\n      'border-radius': '50%'\n    });\n\n    const red = document.createElement('INPUT');\n    red.id = 'color-0';\n    red.last = 255;\n    const green = document.createElement('INPUT');\n    green.last = 0;\n    green.id = 'color-1';\n    const blue = document.createElement('INPUT');\n    blue.last = 0;\n    blue.id = 'color-2';\n\n    [red,green,blue].forEach(input => {\n      input.addEventListener('input',colorInputCallback);\n      input.addEventListener('focus',e=>e.target.select());\n    })\n\n    const inputContainer = create('DIV', swatch, {\n        id: 'inputContainer'\n      });\n\n    create('SPAN', inputContainer, {innerHTML: 'rgb('});\n    inputContainer.append(red);\n    create('SPAN', inputContainer, {innerHTML: ','});\n    inputContainer.append(green);\n    create('SPAN', inputContainer, {innerHTML: ','});\n    inputContainer.append(blue);\n    create('SPAN', inputContainer, {innerHTML: ')'});\n\n\n\n    const sliderStyle = {\n        height: '10px',\n        width: '200px',\n        margin: '10px 0',\n        position: 'relative',\n    };\n\n    const draggerStyle = {\n      height: '50px',\n      width: '50px',\n      'border-radius': '50%',\n      left: -25 + 'px',\n      top: (10-50)/2 + 'px',\n      position: 'absolute'\n    };\n\n    const pipStyle = color => {\n      return {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        'border-radius': '50%',\n        margin: 'auto',\n        height: '20px',\n        width: '20px',\n        background: color,\n        'z-index': 2,\n        transition: 'height .3s, width .3s, box-shadow .3s',\n        'box-shadow': '0 2px 2px 0 rgba(0,0,0,.4)'\n      }\n    };\n\n\n\n    const trackStyle = {\n      background: '#000',\n      height: '100%',\n      width: '195px',\n      position: 'absolute',\n      top: 0,\n      left: '5px',\n      'border-radius': '5px'\n    }\n\n    const redSlider =\n      create('DIV', swatch,{\n        id: 'redSlider',\n        width: 200,\n      }, sliderStyle)\n\n    create('DIV', redSlider,{},trackStyle)\n\n    const redDragger =\n      create('DIV', redSlider,{\n        id: 'redDragger',\n        diameter: 50,\n        status: 0\n      },draggerStyle)\n\n\n    const redPip =\n      create('DIV', redDragger,{\n        id: 'redPip'\n      },pipStyle('red'))\n    redPip.addEventListener('mousedown', draggerCallback('red'));\n\n    const redProgress =\n      create ('DIV', redSlider,{\n        id: 'redProgress'\n      },{\n        height: '10px',\n        width: 0,\n        background: 'linear-gradient(to left, #f00, #f55 200px)',\n        position:'absolute',\n        top: 0,\n        left: 0,\n        'border-radius': '5px'\n      })\n\n\n\n    const greenSlider =\n      create('DIV', swatch,{\n        id: 'greenSlider',\n        width: 200,\n      },sliderStyle)\n\n      create('DIV', greenSlider,{},trackStyle)\n\n    const greenDragger =\n      create('DIV', greenSlider,{\n        id: 'greenDragger',\n        diameter: 50,\n        status: 0\n      },draggerStyle)\n\n\n    const greenPip =\n      create('DIV', greenDragger,{\n        id: 'greenPip'\n      },pipStyle('lime'));\n    greenPip.addEventListener('mousedown', draggerCallback('green'));\n\n    const greenProgress =\n      create ('DIV', greenSlider,{\n        id: 'greenProgress'\n      },{\n        height: '10px',\n        width: 0,\n        background: 'linear-gradient(to left,#0f0, #7f7 200px)',\n        position:'absolute',\n        top: 0,\n        left: 0,\n        'border-radius': '5px'\n      })\n\n\n\n\n    const blueSlider =\n      create('DIV', swatch,{\n        id: 'blueSlider',\n        width: 200,\n      },sliderStyle)\n\n      create('DIV', blueSlider,{},trackStyle)\n\n    const blueDragger =\n      create('DIV', blueSlider,{\n        id: 'blueDragger',\n        diameter: 50,\n        status: 0\n      },draggerStyle)\n\n\n    const bluePip =\n      create('DIV', blueDragger,{\n        id: 'bluePip'\n      },pipStyle('blue'));\n    bluePip.addEventListener('mousedown', draggerCallback('blue'));\n\n    const blueProgress =\n      create ('DIV', blueSlider,{\n        id: 'blueProgress'\n      },{\n        height: '10px',\n        width: 0,\n        background: 'linear-gradient(to left,#00f, #44f 200px)',\n        position:'absolute',\n        top: 0,\n        left: 0,\n        'border-radius': '5px'\n      })\n\n\n\n\n\n\n\n\n}\n","import { create, calcColor } from '../utils';\nimport { circleDraggerCallback } from '../listeners/circleDraggerCallback';\n\n\n\nexport const initializeCircleSlider = (canvasWidth, spectrumWidth, dragDiam) => {\n\n  const spectrumContainerOuter = create('DIV', container,{\n    id: 'spectrumContainerOuter',\n    width: canvasWidth\n  },{\n    background: 'linear-gradient(140deg,#333,black)',\n    padding: '20px', //TODO variable\n    'border-radius': '50%',\n    height: canvasWidth + 'px',\n    width: canvasWidth + 'px',\n    position: 'relative',\n    //border: '3px solid black',\n  })\n\n\n  const spectrumContainer = create('DIV', spectrumContainerOuter,{\n    id: 'spectrumContainer',\n    width: canvasWidth\n  },{\n    height: canvasWidth + 'px',\n    width: canvasWidth + 'px',\n    position: 'relative',\n  })\n\n  const circleSlider = create('CANVAS', spectrumContainer, {\n    id: 'circleSlider',\n    height: canvasWidth,\n    width: canvasWidth,\n    thickness: spectrumWidth\n  });\n\n  const circleDragger = create('DIV', spectrumContainer, {\n    id: 'circleDragger',\n    diameter: dragDiam,\n    x: 0,\n    y: canvasWidth/2\n  },{\n    height: dragDiam + 'px',\n    width: dragDiam + 'px',\n    'border-radius': '50%',\n    position: 'absolute',\n    top: (spectrumWidth - dragDiam)/2 + 'px',\n    left: (canvasWidth - dragDiam)/2 + 'px',\n    'z-index': 3\n  })\n\n  const diameter = 20;\n  const circlePip = create('DIV', circleDragger, {\n    id: 'circlePip',\n    diameter\n  },{\n    height: diameter + 'px', //TODO variables!\n    width: diameter + 'px',\n    'border-radius': '50%',\n    background: 'rgb(255,0,0)',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    margin: 'auto',\n    transition: 'width .3s, height .3s, box-shadow .3s'\n  })\n  circleDragger.addEventListener('mousedown', circleDraggerCallback);\n\n\n  const ctx2 = circleSlider.getContext('2d');\n\n  const buffer = ctx2.createImageData(canvasWidth, canvasWidth);\n  const outer = calcXsects(circleSlider.width/2);\n  const inner = calcXsects(circleSlider.width/2 - spectrumWidth);\n  populateBuffer(buffer, {outer, inner});\n}\n\n\n\nconst fillPixel = (buffer, i, color) => {\n  buffer.data[i*4 + 0] = color[0];\n  buffer.data[i*4 + 1] = color[1];\n  buffer.data[i*4 + 2] = color[2];\n};\n\n\nconst populateBuffer = (buffer, curve) => {\n  const innerRadius = circleSlider.width/2 - circleSlider.thickness;\n\n  for (let i = 0; i < circleSlider.width * circleSlider.width; i++){\n\n    let left = i % circleSlider.width;\n    const x = left - circleSlider.width/2;\n    const xAvg = x + .5;\n\n    let bottom = circleSlider.width - Math.floor(i / circleSlider.width);\n    const y = bottom - circleSlider.width/2;\n    const yAvg = y - .5;\n\n    if (x === 0 && y === 0) continue;\n\n    let progress=0;\n    if (x < 0){\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3;\n    } else {\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3 + 3;\n    }\n\n    const color = calcColor(progress);\n\n    fillPixel(buffer,i,color);\n    const rSquare = xAvg*xAvg + yAvg*yAvg;\n    if ( rSquare <= circleSlider.width*circleSlider.width/4 && rSquare >= innerRadius* innerRadius){\n      buffer.data[i*4 + 3] = 255;\n    }\n\n    antiAlias(x, y, curve.outer, buffer, i, true);\n    antiAlias(x, y, curve.inner, buffer, i, false);\n\n  }\n\n  const ctx = circleSlider.getContext('2d');\n  ctx.putImageData(buffer,0,0);\n}\n\n\n\n\n\n//TODO find boundary. if x < 0 find error. if x > 0 find error next time.\n//TODO find negative boundary. figure out where to place.\n\nconst calcXsects = (radius) => {\n  const xsects = {};\n  for (let i=0; i<circleSlider.width+1; i++){\n    let coord = i - circleSlider.width/2;\n    let collision = Math.sqrt(radius*radius - coord * coord);\n    xsects[coord] = collision;\n  }\n  return xsects;\n}\n\nconst orient = (x, y) => {\n  let orientation = {};\n  orientation.x = x >= 0 ? 0 : 1;\n  orientation.y = y > 0 ? 0 : 1;\n  return orientation;\n}\n\nconst antiAlias = (x, y, curve, buffer, i, convex) => {\n\n  const left = x;\n  const right = x + 1;\n  const bottom = y - 1;\n  const top = y;\n  const collision = {};\n\n  if (\n    left <= curve[top] && curve[top] <= right ||\n    left <= -curve[top] && -curve[top] <= right\n     ){\n    //top collision\n    collision.top = x > 0 ? curve[top]-left : -curve[top]-left;\n  }\n\n  if (\n    left <= curve[bottom] && curve[bottom] <= right ||\n    left <= -curve[bottom] && -curve[bottom] <= right\n  ){\n    //bottom collision\n    collision.bottom = x > 0 ? curve[bottom]-left : -curve[bottom]-left;\n  }\n\n  if (\n    bottom <= curve[left] && curve[left] <= top ||\n    bottom <= -curve[left] && -curve[left] <= top\n  ){\n    //left collision\n    collision.left = y > 0 ? curve[left]-bottom : -curve[left]-bottom;\n  }\n\n  if (\n    bottom <= curve[right] && curve[right] <= top ||\n     bottom <= -curve[right] && -curve[right] <= top\n  ){\n    //right collision\n    collision.right = y > 0 ? curve[right]-bottom : -curve[right]-bottom;\n  }\n\n if (Object.keys(collision).length) {\n   const orientation = orient(x,y);\n   setOpacity(collision, orientation, buffer, i, convex);\n }\n}\n\n\nconst n = (number) => typeof(number) === 'number' ? true : false;\nconst setOpacity = ({left,right,top,bottom}, orientation, buffer, i, convex) => {\n  let opacity;\n\n  if (n(left) && n(right)){\n    opacity =\n      orientation.y === 0 ?\n        (left+right)/2 :\n        1 - (left+right)/2\n\n  } else if (n(top) && n(bottom)) {\n    opacity =\n       orientation.x === 0 ?\n         (top+bottom)/2 :\n         1 - (top+bottom)/2\n\n  } else if (n(bottom) && n(left)) {\n    opacity =\n       orientation.x === 0 && orientation.y === 0 ?\n          bottom * left / 2 :\n          1 - bottom * left / 2\n        //TODO top discont @ x = 0\n\n  } else if (n(bottom) && n(right)) {\n    opacity =\n       orientation.x === 1 && orientation.y === 0 ?\n          (1-bottom) * right / 2 :\n          1 - (1-bottom) * right /2\n\n  } else if (n(top) && n(left)) {\n    opacity =\n      orientation.x === 0 && orientation.y === 1 ?\n        top * (1-left) / 2 :\n        1 - top * (1-left) / 2\n      //TODO bottom discont @ x = 0\n\n  } else if (n(top) && n(right)) {\n    opacity =\n      orientation.x === 1 && orientation.y === 1 ?\n        (1-top)*(1-right)/2 :\n        1 - (1-top)*(1-right)/2\n\n  }\n\n  if ([left,right,top,bottom].some(el=>n(el))){\n    buffer.data[i*4 + 3] = convex ?\n      opacity * 255 :\n      (1-opacity) * 255\n  }\n\n}\n","import { initialize } from './initialize'\n\n\n\n\n//const grab = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), default';\n//const grabbing = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/closedhand.cur), default';\n\n\ndocument.addEventListener('DOMContentLoaded', initialize);\n","import { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\n\nimport { format, calcColor, create } from './utils'\n\nimport { dragger2Callback } from './listeners/dragger2Callback';\n\nimport { initializeSwatch } from './initializers/initializeSwatch';\nimport { initializeDragger2 } from './initializers/initializeDragger2';\nimport { initializeCanvas } from './initializers/initializeCanvas';\n\n\nimport { initializeCircleSlider } from './initializers/initializeCircleSlider';\n\n\n\n\nexport const initialize = () => {\n\n  const d2diameter = 50; //NOTE can be arbitrarily large, until it blocks other elements\n  const sliderWidth = 10;\n  const canvasWidth = 150;\n  const sliderHeight = Math.round(canvasWidth*Math.sqrt(3)/2);\n\n  const circleSliderWidth = 250;\n  const circleSliderThickness = 10;\n  const circleSliderDragger = 50; //NOTE can be arbitrarily large\n\n\n  document.body.style.cursor = 'default';\n\n  const container =\n    create('DIV',document.body,{id: 'container'},{display: 'flex'});\n\n  initializeCircleSlider(\n    circleSliderWidth,\n    circleSliderThickness,\n    circleSliderDragger); //TODO fails on odd numbered widths\n  initializeCanvas(canvasWidth);\n  initializeDragger2(d2diameter);\n  initializeSwatch(circleSliderWidth + 40); //TODO variable\n\n\n\n  updateDragger2();\n  updateSwatch();\n}\n","import { create } from '../utils';\nimport { updateCanvas } from '../updaters/updateCanvas';\n\nexport const initializeCanvas = (canvasWidth) => {\n\n  const padding = 20;\n  const height = Math.round(canvasWidth*Math.sqrt(3)/2);\n\n  const triangleContainer = create('DIV',spectrumContainer, {\n    id: 'triangleContainer'\n  },{\n    height: Math.round(canvasWidth*Math.sqrt(3)/2),\n    width: canvasWidth,\n    position: 'absolute',\n    top: circleSlider.height/2 - height + canvasWidth/(2*Math.sqrt(3)) + 'px',\n    left: (circleSlider.width - canvasWidth)/2 + 'px',\n  });\n\n  const canvas = create('CANVAS', triangleContainer, {\n    id: 'canvas',\n    height: Math.round(canvasWidth*Math.sqrt(3)/2)+padding*2,\n    width: canvasWidth+padding*2,\n    innerHeight: Math.round((canvasWidth)*Math.sqrt(3)/2),\n    innerWidth: canvasWidth,\n    padding\n  },{\n    //background: 'white',\n    position: 'absolute',\n    left: -padding + 'px',\n    top: -padding+ 'px'\n  });\n\n\n  updateCanvas([255, 0, 0, 255]);\n  const ctx = canvas.getContext('2d');\n}\n","import { create } from '../utils';\nimport { dragger2Callback } from '../listeners/dragger2Callback';\n\n\nexport const initializeDragger2 = (d2diameter) => {\n  const dragger2 =\n    create('DIV', triangleContainer, {\n      id: 'dragger2',\n      diameter: d2diameter,\n      x: canvas.innerWidth/2,\n      y: 0,\n    },{\n      height: d2diameter + 'px',\n      width: d2diameter + 'px',\n      borderRadius: '50%',\n      left: (canvas.innerWidth - d2diameter)/2 + 'px',\n      top: -d2diameter/2 + 'px'\n    });\n\n\n\n  const diameter = 20;\n  const pip =\n  create('DIV', dragger2, {\n      id: 'pip',\n      diameter\n    },{\n      display: 'flex',\n      background: 'black',\n      height: diameter + 'px',\n      width: diameter + 'px',\n      'z-index': 2,\n      'border-radius': '50%',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      margin: 'auto',\n      transition: 'height .3s , width .3s, transform .3s, box-shadow .3s'\n    });\n  pip.addEventListener('mousedown', dragger2Callback);\n\n\n  // const border = '1px solid black'\n  // create('DIV', pip,{\n  //   id: 'crosshair1'\n  // },{\n  //   position: 'absolute',\n  //   'border-left': border,\n  //   height: '6px',\n  //   width: '1px',\n  //   left: '50%',\n  //   bottom: '-6px',\n  // })\n  //\n  // create('DIV', pip,{\n  //   id: 'crosshair2'\n  // },{\n  //   position: 'absolute',\n  //   'border-left': border,\n  //   height: '6px',\n  //   width: '1px',\n  //   left: '50%',\n  //   top: '-6px'\n  // })\n  //\n  // create('DIV', pip,{\n  //   id: 'crosshair3'\n  // },{\n  //   position: 'absolute',\n  //   'border-top': border,\n  //   height: '1px',\n  //   width: '6px',\n  //   top: '50%',\n  //   left: '-6px'\n  // })\n  //\n  // create('DIV', pip,{\n  //   id: 'crosshair4'\n  // },{\n  //   position: 'absolute',\n  //   'border-top': border,\n  //   height: '1px',\n  //   width: '6px',\n  //   top: '50%',\n  //   right: '-6px',\n  // })\n\n\n  ///////TODO animate\n  // const check = () => {\n  //     if (!pip.active){\n  //     pip.classList.remove('animate');\n  //     clearInterval(pip.run);\n  //   }\n  // }\n  //\n  // triangleContainer.addEventListener('mouseenter',()=>{\n  //   pip.active = true;\n  //   pip.classList.add('animate');\n  //   pip.run = setInterval(check,1000);\n  // })\n  //\n  // triangleContainer.addEventListener('mouseleave',()=>{\n  //   pip.active = false;\n  // })\n  ////////////\n\n};\n"],"sourceRoot":""}