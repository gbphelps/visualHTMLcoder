{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascripts/slider/utils.js","webpack:///./javascripts/slider/updaters/updateCanvas.js","webpack:///./javascripts/slider/updaters/updateDragger2.js","webpack:///./javascripts/slider/updaters/updateSwatch.js","webpack:///./javascripts/slider/listeners/circleDraggerCallback.js","webpack:///./javascripts/slider/applyUpdates.js","webpack:///./javascripts/slider/listeners/dragger2Callback.js","webpack:///./javascripts/slider/listeners/colorInputCallback.js","webpack:///./javascripts/slider/initializers/initializeSwatch.js","webpack:///./javascripts/slider/initializers/initializeCircleSlider.js","webpack:///./javascripts/slider/slider.js","webpack:///./javascripts/slider/initialize.js","webpack:///./javascripts/slider/initializers/initializeCanvas.js","webpack:///./javascripts/slider/initializers/initializeDragger2.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","format","color","tag","parent","props","style","element","document","createElement","assign","append","calcColor","progress","inc","Math","floor","updateCanvas","canvas","getElementById","ctx","getContext","buffer","createImageData","width","height","populateBuffer","putImageData","antiAlias","top","xp","yp","theta0","atan","theta","PI","sqrt","cos","data","g1","createLinearGradient","addColorStop","g2","beginPath","moveTo","lineTo","strokeStyle","stroke","closePath","updateDragger2","dragger2","x","y","R","round","G","B","pip","background","updateSwatch","swatch","sat","reduce","acc","el","forEach","hue","circleDraggerCallback","e","xPrev","yPrev","clientX","clientY","circlePip","mousemove","preventDefault","magnitude2","circleDragger","tangent","scale","radius","spectrumContainer","circleSlider","thickness","abs","setDraggerPosition","addEventListener","removeEventListener","once","left","diameter","applyUpdates","triangleDragger","sin","dragger2Callback","diffx","diffy","newx","newy","getBoundingClientRect","colorInputCallback","input","val","target","last","push","min","mid","max","Array","from","sort","missingColor","parentColor","tan","revCalc","generateColor","initializeSwatch","container","id","red","green","blue","setAttribute","select","innerHTML","initializeCircleSlider","canvasWidth","spectrumWidth","dragDiam","border-radius","position","right","bottom","margin","transition","outer","calcXsects","inner","initializeCircleSlider_populateBuffer","fillPixel","curve","innerRadius","xAvg","yAvg","rSquare","initializeCircleSlider_antiAlias","xsects","coord","collision","convex","orientation","orient","setOpacity","number","opacity","some","body","cursor","display","triangleContainer","initializeCanvas","d2diameter","borderRadius","initializeDragger2"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const format = color => `rgb(${color[0]},${color[1]},${color[2]})`;\n\nexport const create = (tag, parent, props, style) => {\n  const element = document.createElement(tag);\n  Object.assign(element, props);\n  parent.append(element);\n  if (style) Object.assign(element.style, style);\n  return element;\n};\n\nexport const calcColor = progress => {\n    let inc = 255 * (progress - Math.floor(progress));\n\n    switch (Math.floor(progress)){\n      case 0:\n        return [255, inc, 0]\n      case 1:\n        return [255-inc, 255, 0]\n      case 2:\n        return [0, 255, inc]\n      case 3:\n        return [0, 255-inc, 255]\n      case 4:\n        return [inc, 0, 255]\n      case 5:\n        return [255, 0, 255-inc]\n      case 6:\n        return [255, 0, 0]\n    }\n}\n\nexport const revCalc = color => {\n  let progress;\n\n  if (color[0] === 255 && color[2] === 0){\n    progress = 0 + color[1]/255;\n  }else if (color[1] === 255 && color[2] === 0){\n    progress = 1 + 1 - color[0]/255;\n  }else if (color[1] === 255 && color[0] === 0){\n    progress = 2 + color[2]/255;\n  }else if (color[2] === 255 && color[0] === 0){\n    progress = 3 + 1 - color[1]/255;\n  }else if (color[2] === 255 && color[1] === 0){\n    progress = 4 + color[0]/255;\n  }else if (color[0] === 255 && color[1] === 0){\n    progress = 5 + 1 - color[2]/255;\n  }\n\n  return progress;\n}\n\nexport const generateColor = color => {\n  const canvas = document.getElementById('canvas');\n\n  let [min,mid,max] = Array.from(color).sort((x,y)=> x-y);\n  const r = max / 255;\n  const theta = min / max;\n  const missingColor = 255 * (mid - min) / (max - min);\n\n  let parentColor = [];\n  if (max !== min){\n    color.forEach(hue =>{\n      switch (hue){\n        case max: parentColor.push(255); break;\n        case min: parentColor.push(0); break;\n        default: parentColor.push(missingColor); break;\n      }\n    });\n  } else {\n    parentColor = canvas.color\n  }\n\n  const theta0 = Math.PI/3 - (Math.PI/3 * theta);\n  let x = Math.sqrt(3) * max * canvas.width /2 /255 /Math.cos(Math.PI/6-theta0) /Math.sqrt(1+ Math.tan(theta0) * Math.tan(theta0));\n  let y = canvas.height - x * Math.tan(theta0);\n\n  if (max === 0){\n    x = 0;\n    y = canvas.height;\n  } else if (min === 255){\n    x = canvas.width;\n    y = canvas.height;\n  }\n\n  const progress = revCalc(parentColor)*Math.PI/3;\n\n  const triangleDragger = {x,y};\n  return {triangleDragger, progress};\n\n};\n","import { format } from '../utils';\n\nexport const updateCanvas = color => {\n\n  const canvas = document.getElementById('canvas');\n  const ctx = canvas.getContext('2d');\n  canvas.color = color;\n\n  const buffer = ctx.createImageData(canvas.width, canvas.height);\n\n  populateBuffer(buffer);\n  ctx.putImageData(buffer, 0, 0);\n  antiAlias(canvas);\n};\n\nconst populateBuffer = (buffer) => {\n  const {width, height, color} = document.getElementById('canvas');\n\n  for (let i=0; i<(height * width); i++) {\n    const top = Math.floor(i / width);\n    const left = Math.floor(i % width);\n\n    const xp = left; //TODO antialias this manually with .5 and antialias function from initializeCircleSlider\n    const yp = height - top;\n\n    let theta0 = Math.atan(yp/xp);\n    const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n    //map radial coordinates [0, pi/3] -> [1, 0]\n\n    let r = Math.sqrt(xp*xp + yp*yp)/canvas.width;\n    r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2)\n    //map pie wedge to equilateral triangle by flattening arc\n\n    if (theta < 0 || theta > 1 || r > 1){\n    }else{\n      buffer.data[i*4 + 0] =\n        (color[0] + (255-color[0])*theta) * r;\n      buffer.data[i*4 + 1] =\n        (color[1] + (255-color[1])*theta) * r;\n      buffer.data[i*4 + 2] =\n        (color[2] + (255-color[2])*theta) * r;\n      buffer.data[i*4 + 3] = 255;\n    }\n  }\n};\n\n\nconst antiAlias = (canvas) => {\n  const ctx = canvas.getContext('2d');\n\n  const g1 = ctx.createLinearGradient(0, 0, canvas.width/2, 0);\n  g1.addColorStop(0, 'black');\n  g1.addColorStop(1, format(canvas.color));\n\n  const g2 = ctx.createLinearGradient(canvas.width/2, 0, canvas.width, 0);\n  g2.addColorStop(0, format(canvas.color));\n  g2.addColorStop(1, 'white');\n\n  ctx.beginPath();\n    ctx.moveTo(1, canvas.height -.5);\n    ctx.lineTo(canvas.width/2 + .5, .5);\n    ctx.strokeStyle = g1;\n    ctx.stroke();\n  ctx.closePath();\n\n  ctx.beginPath();\n    ctx.moveTo(canvas.width/2 + .5, .5);\n    ctx.lineTo(canvas.width, canvas.height -.5);\n    ctx.strokeStyle = g2;\n    ctx.stroke();\n  ctx.closePath();\n};\n","import { format } from '../utils'\n\nexport const updateDragger2 = () => {\n\n    const xp = dragger2.x;\n    const yp = canvas.height - dragger2.y;\n\n    let theta0 = Math.atan(yp/xp);\n    const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n\n    let r = Math.sqrt(xp*xp + yp*yp)/canvas.width;\n    r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2);\n\n    let R = Math.round((canvas.color[0] + (255-canvas.color[0])*theta) * r) || 0;\n    let G = Math.round((canvas.color[1] + (255-canvas.color[1])*theta) * r) || 0;\n    let B = Math.round((canvas.color[2] + (255-canvas.color[2])*theta) * r) || 0;\n\n    dragger2.color = [R,G,B];\n    pip.style.background = format([R,G,B]);\n}\n","import { format } from '../utils'\n\nexport const updateSwatch = () => {\n  const swatch = document.getElementById('swatch');\n  swatch.style.background = format(dragger2.color);\n  const sat = dragger2.color.reduce((acc,el) => acc += el)-255;\n  swatch.style.color = (sat < 255*3/2 ? 'white' : 'black');\n   dragger2.color.forEach((hue,i)=>{\n     const input = document.getElementById(`color-${i}`);\n     input.value = hue;\n   });\n};\n","import { updateCanvas } from '../updaters/updateCanvas';\nimport { format, calcColor } from '../utils';\nimport { updateSwatch } from '../updaters/updateSwatch';\nimport { updateDragger2 } from '../updaters/updateDragger2'\n\nexport const circleDraggerCallback = e => {\n  let [ xPrev, yPrev ] = [ e.clientX, e.clientY ];\n  circlePip.style.height = '30px';\n  circlePip.style.width = '30px';\n\n  const mousemove = e => {\n\n    e.preventDefault();\n\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n\n    const m = [diffx, -diffy];\n\n    const magnitude2 =\n      circleDragger.y*circleDragger.y + circleDragger.x*circleDragger.x;\n    const tangent = [-circleDragger.y, circleDragger.x];\n    const scale = (m[0]*tangent[0] + m[1]*tangent[1])/magnitude2;\n\n\n    let x, y;\n\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    if (Math.abs(tangent[0]) > Math.abs(tangent[1])){\n      x = circleDragger.x + tangent[0]*scale;\n      if (circleDragger.y > circleDragger.x){\n        y = Math.sqrt(radius*radius - x * x);\n      } else {\n        y = -Math.sqrt(radius*radius - x * x);\n      }\n    }else{\n      y = circleDragger.y + tangent[1]*scale;\n      if (-Math.abs(circleDragger.y) < circleDragger.x){\n        x = Math.sqrt(radius*radius - y * y)\n      } else {\n        x = -Math.sqrt(radius*radius - y * y)\n      }\n    }\n\n\n    //fix fast-drag errors\n    if (Math.abs(x) > radius){\n      x = radius;\n      y = 0;\n    }\n    if (Math.abs(y) > radius){\n      y = radius;\n      x = 0;\n    }\n    // const x = circleDragger.x + tangent[0]*scale;\n    // const y = circleDragger.y + tangent[1]*scale;\n\n    setDraggerPosition({x, y});\n\n\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n\n\n    document.addEventListener('mouseup', ()=>{\n      document.removeEventListener('mousemove', mousemove);\n      circlePip.style.height = '10px';\n      circlePip.style.width = '10px'; //TODO use global variables attached to HTML elements\n    },{once: true})\n\n\n  }\n\n  document.addEventListener('mousemove', mousemove)\n}\n\nexport const setDraggerPosition = ({ x, y }) => {\n  const left = (x + spectrumContainer.width/2) - circleDragger.diameter/2;\n  const top = (spectrumContainer.width/2 - y) - circleDragger.diameter/2;\n\n\n  let theta;\n  if (x < 0){\n    theta = Math.atan(y/x) + Math.PI/2;\n  } else {\n    theta = Math.atan(y/x) + 3/2 * Math.PI;\n  }\n\n  const progress = 3 * theta / Math.PI;\n\n  circleDragger.x = x;\n  circleDragger.y = y;\n  circleDragger.style.left = left + 'px';\n  circleDragger.style.top = top + 'px';\n  circlePip.style.background = format(calcColor(progress))\n\n  updateCanvas(calcColor(progress));\n  updateDragger2();\n  updateSwatch();\n}\n","import { format, calcColor,revCalc } from './utils';\nimport { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\nimport { setDraggerPosition } from './listeners/circleDraggerCallback'\n\n\nexport const applyUpdates = ({triangleDragger, progress}) => {\n\n  if (typeof(progress) !== 'undefined') {\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    const x = Math.cos(progress + Math.PI/2) * radius;\n    const y = Math.sin(progress + Math.PI/2) * radius;\n    setDraggerPosition({x, y});\n\n\n\n  }\n\n  if (typeof(triangleDragger) !== 'undefined') {\n    dragger2.x = triangleDragger.x;\n    dragger2.style.left = dragger2.x - dragger2.diameter/2 + 'px';\n    dragger2.y = triangleDragger.y;\n    dragger2.style.top = dragger2.y - dragger2.diameter/2 + 'px';\n  }\n\n  updateDragger2();\n  updateSwatch();\n\n}\n","import { applyUpdates } from '../applyUpdates';\n\nexport const dragger2Callback = e => {\n\n  e.preventDefault();\n  let xPrev = e.clientX;\n  let yPrev = e.clientY;\n  //document.body.style.cursor = grabbing;\n  pip.style.width = '30px';\n  pip.style.height = '30px';\n\n  const mousemove = e => {\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n    const newx = dragger2.x + diffx;\n    const newy = dragger2.y + diffy;\n\n    const box = canvas.getBoundingClientRect();\n\n\n\n    let x, y;\n\n    if (-canvas.height*(2*newx/canvas.width - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.width/2 * (1 - newy/canvas.height)\n      }else{\n        x = newx;\n        y = -canvas.height*(2*newx/canvas.width - 1);\n      }\n    }else if(canvas.height*(2*newx/canvas.width - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.width/2 * (newy/canvas.height + 1)\n      }else{\n        x = newx;\n        y = canvas.height*(2*newx/canvas.width - 1);\n      }\n    }else{\n      x = newx;\n      y = newy;\n    }\n\n    //edge case clearance\n\n    if (y > canvas.height){\n      y = canvas.height;\n    }else if (y < 0){\n      y = 0;\n    }\n\n    if (x > canvas.width){\n      x = canvas.width;\n    } else if (x < 0){\n      x = 0;\n    }\n\n    if (newy < 0){\n      y = 0;\n      x = canvas.width/2;\n    }\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n\n    const triangleDragger = {x,y};\n    applyUpdates({triangleDragger})\n  };\n\n  document.addEventListener('mousemove', mousemove);\n\n  document.addEventListener('mouseup',()=>{\n      document.removeEventListener('mousemove', mousemove);\n      pip.style.width = '10px';\n      pip.style.height = '10px';\n    },{\n      once:true\n    }\n  );\n\n}\n","import { format, calcColor, revCalc, generateColor } from '../utils';\nimport { applyUpdates } from '../applyUpdates';\n\nexport const colorInputCallback = e => {\n    const color = [];\n    for (let i = 0; i < 3; i++) {\n      const input = document.getElementById(`color-${i}`);\n      let val = +input.value;\n      if (input === e.target && !(val >= 0 && val <= 255)){\n        input.value = input.last;\n        return;\n      };\n      color.push(val);\n      input.last = val;\n    }\n    applyUpdates(generateColor(color))\n  };\n","import { format, create } from '../utils';\nimport { colorInputCallback } from '../listeners/colorInputCallback';\n\n\nexport const initializeSwatch = () => {\n  const swatch =\n    create('DIV', container, {\n      id: 'swatch'\n    },{\n      background: format(canvas.color)\n    });\n\n    const red = document.createElement('INPUT');\n    red.id = 'color-0';\n    const green = document.createElement('INPUT');\n    green.id = 'color-1';\n    const blue = document.createElement('INPUT');\n    blue.id = 'color-2';\n\n    [red,green,blue].forEach(input => {\n      input.setAttribute('size', 3);\n      input.addEventListener('input',colorInputCallback);\n      input.addEventListener('focus',e=>e.target.select())\n    })\n\n    create('SPAN', swatch, {innerHTML: 'rgb('});\n    swatch.append(red);\n    create('SPAN', swatch, {innerHTML: ','});\n    swatch.append(green);\n    create('SPAN', swatch, {innerHTML: ','});\n    swatch.append(blue);\n    create('SPAN', swatch, {innerHTML: ')'});\n}\n","import { create, calcColor } from '../utils';\nimport { circleDraggerCallback } from '../listeners/circleDraggerCallback';\n\n\n\nexport const initializeCircleSlider = (canvasWidth, spectrumWidth, dragDiam) => {\n  const spectrumContainer = create('DIV', container,{\n    id: 'spectrumContainer',\n    width: canvasWidth\n  },{\n    background: 'black',\n    'border-radius': '5px',\n    height: canvasWidth + 'px',\n    width: canvasWidth + 'px',\n    position: 'relative'\n  })\n\n  const circleSlider = create('CANVAS', spectrumContainer, {\n    id: 'circleSlider',\n    height: canvasWidth,\n    width: canvasWidth,\n    thickness: spectrumWidth\n  });\n\n  const circleDragger = create('DIV', spectrumContainer, {\n    id: 'circleDragger',\n    diameter: dragDiam,\n    x: 0,\n    y: canvasWidth/2\n  },{\n    height: dragDiam + 'px',\n    width: dragDiam + 'px',\n    'border-radius': '50%',\n    position: 'absolute',\n    top: (spectrumWidth - dragDiam)/2 + 'px',\n    left: (canvasWidth - dragDiam)/2 + 'px'\n  })\n\n  const circlePip = create('DIV', circleDragger, {\n    id: 'circlePip'\n  },{\n    height: '10px',\n    width: '10px',\n    'border-radius': '50%',\n    background: 'rgb(255,0,0)',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    margin: 'auto',\n    transition: 'width .3s, height .3s'\n  })\n  circleDragger.addEventListener('mousedown', circleDraggerCallback);\n\n\n  const ctx2 = circleSlider.getContext('2d');\n\n  const buffer = ctx2.createImageData(canvasWidth, canvasWidth);\n  const outer = calcXsects(circleSlider.width/2);\n  const inner = calcXsects(circleSlider.width/2 - spectrumWidth);\n  populateBuffer(buffer, {outer, inner});\n}\n\n\n\nconst fillPixel = (buffer, i, color) => {\n  buffer.data[i*4 + 0] = color[0];\n  buffer.data[i*4 + 1] = color[1];\n  buffer.data[i*4 + 2] = color[2];\n};\n\n\nconst populateBuffer = (buffer, curve) => {\n  const innerRadius = circleSlider.width/2 - circleSlider.thickness;\n\n  for (let i = 0; i < circleSlider.width * circleSlider.width; i++){\n\n    let left = i % circleSlider.width;\n    const x = left - circleSlider.width/2;\n    const xAvg = x + .5;\n\n    let bottom = circleSlider.width - Math.floor(i / circleSlider.width);\n    const y = bottom - circleSlider.width/2;\n    const yAvg = y - .5;\n\n    if (x === 0 && y === 0) continue;\n\n    let progress=0;\n    if (x < 0){\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3;\n    } else {\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3 + 3;\n    }\n\n    const color = calcColor(progress);\n\n    fillPixel(buffer,i,color);\n    const rSquare = xAvg*xAvg + yAvg*yAvg;\n    if ( rSquare <= circleSlider.width*circleSlider.width/4 && rSquare >= innerRadius* innerRadius){\n      buffer.data[i*4 + 3] = 255;\n    }\n\n    antiAlias(x, y, curve.outer, buffer, i, true);\n    antiAlias(x, y, curve.inner, buffer, i, false);\n\n  }\n\n  const ctx = circleSlider.getContext('2d');\n  ctx.putImageData(buffer,0,0);\n}\n\n\n\n\n\n//TODO find boundary. if x < 0 find error. if x > 0 find error next time.\n//TODO find negative boundary. figure out where to place.\n\nconst calcXsects = (radius) => {\n  const xsects = {};\n  for (let i=0; i<circleSlider.width+1; i++){\n    let coord = i - circleSlider.width/2;\n    let collision = Math.sqrt(radius*radius - coord * coord);\n    xsects[coord] = collision;\n  }\n  return xsects;\n}\n\nconst orient = (x, y) => {\n  let orientation = {};\n  orientation.x = x >= 0 ? 0 : 1;\n  orientation.y = y > 0 ? 0 : 1;\n  return orientation;\n}\n\nconst antiAlias = (x, y, curve, buffer, i, convex) => {\n\n  const left = x;\n  const right = x + 1;\n  const bottom = y - 1;\n  const top = y;\n  const collision = {};\n\n  if (\n    left <= curve[top] && curve[top] <= right ||\n    left <= -curve[top] && -curve[top] <= right\n     ){\n    //top collision\n    collision.top = x > 0 ? curve[top]-left : -curve[top]-left;\n  }\n\n  if (\n    left <= curve[bottom] && curve[bottom] <= right ||\n    left <= -curve[bottom] && -curve[bottom] <= right\n  ){\n    //bottom collision\n    collision.bottom = x > 0 ? curve[bottom]-left : -curve[bottom]-left;\n  }\n\n  if (\n    bottom <= curve[left] && curve[left] <= top ||\n    bottom <= -curve[left] && -curve[left] <= top\n  ){\n    //left collision\n    collision.left = y > 0 ? curve[left]-bottom : -curve[left]-bottom;\n  }\n\n  if (\n    bottom <= curve[right] && curve[right] <= top ||\n     bottom <= -curve[right] && -curve[right] <= top\n  ){\n    //right collision\n    collision.right = y > 0 ? curve[right]-bottom : -curve[right]-bottom;\n  }\n\n const orientation = orient(x,y);\n setOpacity(collision, orientation, buffer, i, convex, x, y);\n\n}\n\n\nconst n = (number) => typeof(number) === 'number' ? true : false;\n\nconst setOpacity = ({left,right,top,bottom}, orientation, buffer, i, convex , x ,y) => {\n  let opacity;\n\n  if (n(left) && n(right)){\n    opacity =\n      orientation.y === 0 ?\n        (left+right)/2 :\n        1 - (left+right)/2\n\n  } else if (n(top) && n(bottom)) {\n    opacity =\n       orientation.x === 0 ?\n         (top+bottom)/2 :\n         1 - (top+bottom)/2\n\n  } else if (n(bottom) && n(left)) {\n    opacity =\n       orientation.x === 0 && orientation.y === 0 ?\n          bottom * left / 2 :\n          1 - bottom * left / 2\n        //TODO top discont @ x = 0\n\n  } else if (n(bottom) && n(right)) {\n    opacity =\n       orientation.x === 1 && orientation.y === 0 ?\n          (1-bottom) * right / 2 :\n          1 - (1-bottom) * right /2\n\n  } else if (n(top) && n(left)) {\n    opacity =\n      orientation.x === 0 && orientation.y === 1 ?\n        top * (1-left) / 2 :\n        1 - top * (1-left) / 2\n      //TODO bottom discont @ x = 0\n\n  } else if (n(top) && n(right)) {\n    opacity =\n      orientation.x === 1 && orientation.y === 1 ?\n        (1-top)*(1-right)/2 :\n        1 - (1-top)*(1-right)/2\n\n  }\n\n  if ([left,right,top,bottom].some(el=>n(el))){\n    buffer.data[i*4 + 3] = convex ?\n      opacity * 255 :\n      (1-opacity) * 255\n  }\n\n}\n","import { initialize } from './initialize'\n\n\n\n\n//const grab = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), default';\n//const grabbing = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/closedhand.cur), default';\n\n\ndocument.addEventListener('DOMContentLoaded', initialize);\n","import { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\n\nimport { format, calcColor, create } from './utils'\n\nimport { dragger2Callback } from './listeners/dragger2Callback';\n\nimport { initializeSwatch } from './initializers/initializeSwatch';\nimport { initializeDragger2 } from './initializers/initializeDragger2';\nimport { initializeCanvas } from './initializers/initializeCanvas';\n\n\nimport { initializeCircleSlider } from './initializers/initializeCircleSlider';\n\n\n\n\nexport const initialize = () => {\n\n  const d2diameter = 50; //NOTE can be arbitrarily large, until it blocks other elements\n  const sliderWidth = 10;\n  const canvasWidth = 200;\n  const sliderHeight = Math.round(canvasWidth*Math.sqrt(3)/2);\n\n  const circleSliderWidth = 340;\n  const circleSliderThickness = 3;\n  const circleSliderDragger = 50; //NOTE can be arbitrarily large\n\n\n  document.body.style.cursor = 'default';\n\n  const container =\n    create('DIV',document.body,{id: 'container'},{display: 'flex'});\n\n  initializeCircleSlider(\n    circleSliderWidth,\n    circleSliderThickness,\n    circleSliderDragger); //TODO fails on odd numbered widths\n  initializeCanvas(canvasWidth);\n  initializeDragger2(d2diameter);\n  initializeSwatch();\n\n\n\n  updateDragger2();\n  updateSwatch();\n}\n","import { create } from '../utils';\nimport { updateCanvas } from '../updaters/updateCanvas';\n\nexport const initializeCanvas = (canvasWidth) => {\n\n\n  const height = Math.round(canvasWidth*Math.sqrt(3)/2);\n\n  const triangleContainer = create('DIV',spectrumContainer, {\n    id: 'triangleContainer'\n  },{\n    height: Math.round(canvasWidth*Math.sqrt(3)/2),\n    width: canvasWidth,\n    position: 'absolute',\n    top: circleSlider.height/2 - height + canvasWidth/(2*Math.sqrt(3)) + 'px',\n    left: (circleSlider.width - canvasWidth)/2 + 'px',\n  });\n\n  const canvas = create('CANVAS', triangleContainer, {\n    id: 'canvas',\n    height: Math.round(canvasWidth*Math.sqrt(3)/2),\n    width: canvasWidth,\n  });\n\n  updateCanvas([255, 0, 0, 255]);\n  const ctx = canvas.getContext('2d');\n}\n","import { create } from '../utils';\nimport { dragger2Callback } from '../listeners/dragger2Callback';\n\n\nexport const initializeDragger2 = (d2diameter) => {\n  const dragger2 =\n    create('DIV', triangleContainer, {\n      id: 'dragger2',\n      color: canvas.color,\n      diameter: d2diameter,\n      x: canvas.width/2,\n      y: 0,\n    },{\n      height: d2diameter + 'px',\n      width: d2diameter + 'px',\n      borderRadius: '50%',\n      left: (canvas.width - d2diameter)/2 + 'px',\n      top: -d2diameter/2 + 'px'\n    });\n\n\n  const pip =\n  create('DIV', dragger2, {\n      id: 'pip'\n    },{\n      background: 'black',\n      height: '10px',\n      width: '10px',\n      'border-radius': '50%',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      margin: 'auto',\n      transition: 'height .3s , width .3s'\n    });\n  pip.addEventListener('mousedown', dragger2Callback);\n  \n};\n"],"sourceRoot":""}