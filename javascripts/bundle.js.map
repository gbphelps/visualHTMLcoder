{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascripts/slider/utils.js","webpack:///./javascripts/slider/updaters/updateCanvas.js","webpack:///./javascripts/slider/updaters/updateDragger2.js","webpack:///./javascripts/slider/updaters/updateSwatch.js","webpack:///./javascripts/slider/listeners/circleDraggerCallback.js","webpack:///./javascripts/slider/applyUpdates.js","webpack:///./javascripts/slider/listeners/dragger2Callback.js","webpack:///./javascripts/slider/listeners/colorInputCallback.js","webpack:///./javascripts/slider/initializers/initializeSwatch.js","webpack:///./javascripts/slider/initializers/initializeCircleSlider.js","webpack:///./javascripts/slider/slider.js","webpack:///./javascripts/slider/initialize.js","webpack:///./javascripts/slider/initializers/initializeCanvas.js","webpack:///./javascripts/slider/initializers/initializeDragger2.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","format","color","tag","parent","props","style","element","document","createElement","assign","append","calcColor","progress","inc","Math","floor","updateCanvas","canvas","getElementById","ctx","getContext","buffer","createImageData","width","height","populateBuffer","putImageData","antiAlias","top","xp","yp","theta0","atan","theta","PI","sqrt","cos","data","g1","createLinearGradient","addColorStop","g2","beginPath","moveTo","lineTo","strokeStyle","stroke","closePath","updateDragger2","dragger2","x","y","R","round","G","B","background","updateSwatch","swatch","sat","reduce","acc","el","forEach","hue","circleDraggerCallback","e","xPrev","yPrev","clientX","clientY","mousemove","preventDefault","magnitude2","circleDragger","tangent","scale","radius","spectrumContainer","circleSlider","thickness","abs","setDraggerPosition","addEventListener","removeEventListener","once","left","diameter","applyUpdates","triangleDragger","sin","dragger2Callback","diffx","diffy","newx","newy","getBoundingClientRect","colorInputCallback","input","val","target","last","push","min","mid","max","Array","from","sort","missingColor","parentColor","tan","revCalc","generateColor","initializeSwatch","container","id","red","green","blue","setAttribute","select","innerHTML","initializeCircleSlider","canvasWidth","spectrumWidth","dragDiam","position","border-radius","curve","boundaryMap","initializeCircleSlider_populateBuffer","fillPixel","innerRadius","rSquare","initializeCircleSlider_antiAlias","oR","iR","outer","inner","collisionMap","xabs","yabs","b","gt","lt","orient","cb","orientation","setOpacity","opacity","body","cursor","display","triangleContainer","initializeCanvas","d2diameter","borderRadius","initializeDragger2"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const format = color => `rgb(${color[0]},${color[1]},${color[2]})`;\n\nexport const create = (tag, parent, props, style) => {\n  const element = document.createElement(tag);\n  Object.assign(element, props);\n  parent.append(element);\n  if (style) Object.assign(element.style, style);\n  return element;\n};\n\nexport const calcColor = progress => {\n    let inc = 255 * (progress - Math.floor(progress));\n\n    switch (Math.floor(progress)){\n      case 0:\n        return [255, inc, 0]\n      case 1:\n        return [255-inc, 255, 0]\n      case 2:\n        return [0, 255, inc]\n      case 3:\n        return [0, 255-inc, 255]\n      case 4:\n        return [inc, 0, 255]\n      case 5:\n        return [255, 0, 255-inc]\n      case 6:\n        return [255, 0, 0]\n    }\n}\n\nexport const revCalc = color => {\n  let progress;\n\n  if (color[0] === 255 && color[2] === 0){\n    progress = 0 + color[1]/255;\n  }else if (color[1] === 255 && color[2] === 0){\n    progress = 1 + 1 - color[0]/255;\n  }else if (color[1] === 255 && color[0] === 0){\n    progress = 2 + color[2]/255;\n  }else if (color[2] === 255 && color[0] === 0){\n    progress = 3 + 1 - color[1]/255;\n  }else if (color[2] === 255 && color[1] === 0){\n    progress = 4 + color[0]/255;\n  }else if (color[0] === 255 && color[1] === 0){\n    progress = 5 + 1 - color[2]/255;\n  }\n\n  return progress;\n}\n\nexport const generateColor = color => {\n  const canvas = document.getElementById('canvas');\n\n  let [min,mid,max] = Array.from(color).sort((x,y)=> x-y);\n  const r = max / 255;\n  const theta = min / max;\n  const missingColor = 255 * (mid - min) / (max - min);\n\n  let parentColor = [];\n  if (max !== min){\n    color.forEach(hue =>{\n      switch (hue){\n        case max: parentColor.push(255); break;\n        case min: parentColor.push(0); break;\n        default: parentColor.push(missingColor); break;\n      }\n    });\n  } else {\n    parentColor = canvas.color\n  }\n\n  const theta0 = Math.PI/3 - (Math.PI/3 * theta);\n  let x = Math.sqrt(3) * max * canvas.width /2 /255 /Math.cos(Math.PI/6-theta0) /Math.sqrt(1+ Math.tan(theta0) * Math.tan(theta0));\n  let y = canvas.height - x * Math.tan(theta0);\n\n  if (max === 0){\n    x = 0;\n    y = canvas.height;\n  } else if (min === 255){\n    x = canvas.width;\n    y = canvas.height;\n  }\n\n  const progress = revCalc(parentColor)*Math.PI/3;\n\n  const triangleDragger = {x,y};\n  return {triangleDragger, progress};\n\n};\n","import { format } from '../utils';\n\nexport const updateCanvas = color => {\n\n  const canvas = document.getElementById('canvas');\n  const ctx = canvas.getContext('2d');\n  canvas.color = color;\n\n  const buffer = ctx.createImageData(canvas.width, canvas.height);\n\n  populateBuffer(buffer);\n  ctx.putImageData(buffer, 0, 0);\n  antiAlias(canvas);\n};\n\nconst populateBuffer = (buffer) => {\n  const {width, height, color} = document.getElementById('canvas');\n\n  for (let i=0; i<(height * width); i++) {\n    const top = Math.floor(i / width);\n    const left = Math.floor(i % width);\n\n    const xp = left;\n    const yp = height - top;\n\n    let theta0 = Math.atan(yp/xp);\n    const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n    //map radial coordinates [0, pi/3] -> [1, 0]\n\n    let r = Math.sqrt(xp*xp + yp*yp)/canvas.width;\n    r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2)\n    //map pie wedge to equilateral triangle by flattening arc\n\n    if (theta < 0 || theta > 1 || r > 1){\n    }else{\n      buffer.data[i*4 + 0] =\n        (color[0] + (255-color[0])*theta) * r;\n      buffer.data[i*4 + 1] =\n        (color[1] + (255-color[1])*theta) * r;\n      buffer.data[i*4 + 2] =\n        (color[2] + (255-color[2])*theta) * r;\n      buffer.data[i*4 + 3] = 255;\n    }\n  }\n};\n\n\nconst antiAlias = (canvas) => {\n  const ctx = canvas.getContext('2d');\n\n  const g1 = ctx.createLinearGradient(0, 0, canvas.width/2, 0);\n  g1.addColorStop(0, 'black');\n  g1.addColorStop(1, format(canvas.color));\n\n  const g2 = ctx.createLinearGradient(canvas.width/2, 0, canvas.width, 0);\n  g2.addColorStop(0, format(canvas.color));\n  g2.addColorStop(1, 'white');\n\n  ctx.beginPath();\n    ctx.moveTo(1, canvas.height -.5);\n    ctx.lineTo(canvas.width/2 + .5, .5);\n    ctx.strokeStyle = g1;\n    ctx.stroke();\n  ctx.closePath();\n\n  ctx.beginPath();\n    ctx.moveTo(canvas.width/2 + .5, .5);\n    ctx.lineTo(canvas.width, canvas.height -.5);\n    ctx.strokeStyle = g2;\n    ctx.stroke();\n  ctx.closePath();\n};\n","import { format } from '../utils'\n\nexport const updateDragger2 = () => {\n\n    const xp = dragger2.x;\n    const yp = canvas.height - dragger2.y;\n\n    let theta0 = Math.atan(yp/xp);\n    const theta = (Math.PI/3 - theta0)/(Math.PI/3);\n\n    let r = Math.sqrt(xp*xp + yp*yp)/canvas.width;\n    r = r * Math.cos(Math.PI/6 - theta0) / (Math.sqrt(3)/2);\n\n    let R = Math.round((canvas.color[0] + (255-canvas.color[0])*theta) * r) || 0;\n    let G = Math.round((canvas.color[1] + (255-canvas.color[1])*theta) * r) || 0;\n    let B = Math.round((canvas.color[2] + (255-canvas.color[2])*theta) * r) || 0;\n\n    dragger2.color = [R,G,B];\n    dragger2.style.background = format([R,G,B]);\n}\n","import { format } from '../utils'\n\nexport const updateSwatch = () => {\n  const swatch = document.getElementById('swatch');\n  swatch.style.background = format(dragger2.color);\n  const sat = dragger2.color.reduce((acc,el) => acc += el)-255;\n  swatch.style.color = (sat < 255*3/2 ? 'white' : 'black');\n   dragger2.color.forEach((hue,i)=>{\n     const input = document.getElementById(`color-${i}`);\n     input.value = hue;\n   });\n};\n","import { updateCanvas } from '../updaters/updateCanvas';\nimport { format, calcColor } from '../utils';\nimport { updateSwatch } from '../updaters/updateSwatch';\nimport { updateDragger2 } from '../updaters/updateDragger2'\n\nexport const circleDraggerCallback = e => {\n  let [ xPrev, yPrev ] = [ e.clientX, e.clientY ];\n\n  const mousemove = e => {\n\n    e.preventDefault();\n\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n\n\n    const m = [diffx, -diffy];\n\n    const magnitude2 =\n      circleDragger.y*circleDragger.y + circleDragger.x*circleDragger.x;\n    const tangent = [-circleDragger.y, circleDragger.x];\n    const scale = (m[0]*tangent[0] + m[1]*tangent[1])/magnitude2;\n\n\n    let x, y;\n\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    if (Math.abs(tangent[0]) > Math.abs(tangent[1])){\n      x = circleDragger.x + tangent[0]*scale;\n      if (circleDragger.y > circleDragger.x){\n        y = Math.sqrt(radius*radius - x * x);\n      } else {\n        y = -Math.sqrt(radius*radius - x * x);\n      }\n    }else{\n      y = circleDragger.y + tangent[1]*scale;\n      if (-Math.abs(circleDragger.y) < circleDragger.x){\n        x = Math.sqrt(radius*radius - y * y)\n      } else {\n        x = -Math.sqrt(radius*radius - y * y)\n      }\n    }\n\n\n    //fix fast-drag errors\n    if (Math.abs(x) > radius){\n      x = radius;\n      y = 0;\n    }\n    if (Math.abs(y) > radius){\n      y = radius;\n      x = 0;\n    }\n    // const x = circleDragger.x + tangent[0]*scale;\n    // const y = circleDragger.y + tangent[1]*scale;\n\n    setDraggerPosition({x, y});\n\n\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n\n\n    document.addEventListener('mouseup', ()=>{\n      document.removeEventListener('mousemove', mousemove)\n    },{once: true})\n\n\n  }\n\n  document.addEventListener('mousemove', mousemove)\n}\n\nexport const setDraggerPosition = ({ x, y }) => {\n  const left = (x + spectrumContainer.width/2) - circleDragger.diameter/2;\n  const top = (spectrumContainer.width/2 - y) - circleDragger.diameter/2;\n\n  let progress;\n  if (x < 0){\n    progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3;\n  } else {\n    progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3 + 3;\n  }\n\n\n  circleDragger.x = x;\n  circleDragger.y = y;\n  circleDragger.style.left = left + 'px';\n  circleDragger.style.top = top + 'px';\n\n  updateCanvas(calcColor(progress));\n  updateDragger2();\n  updateSwatch();\n}\n","import { format, calcColor,revCalc } from './utils';\nimport { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\nimport { setDraggerPosition } from './listeners/circleDraggerCallback'\n\n\nexport const applyUpdates = ({triangleDragger, progress}) => {\n\n  if (typeof(progress) !== 'undefined') {\n    const radius = (spectrumContainer.width/2 - circleSlider.thickness)/2 + spectrumContainer.width/4;\n    const x = Math.cos(progress + Math.PI/2) * radius;\n    const y = Math.sin(progress + Math.PI/2) * radius;\n    setDraggerPosition({x, y});\n\n\n\n  }\n\n  if (typeof(triangleDragger) !== 'undefined') {\n    dragger2.x = triangleDragger.x;\n    dragger2.style.left = dragger2.x - dragger2.diameter/2 + 'px';\n    dragger2.y = triangleDragger.y;\n    dragger2.style.top = dragger2.y - dragger2.diameter/2 + 'px';\n  }\n\n  updateDragger2();\n  updateSwatch();\n\n}\n","import { applyUpdates } from '../applyUpdates';\n\nexport const dragger2Callback = e => {\n\n  e.preventDefault();\n  let xPrev = e.clientX;\n  let yPrev = e.clientY;\n  //document.body.style.cursor = grabbing;\n\n  const mousemove = e => {\n    const diffx = e.clientX - xPrev;\n    const diffy = e.clientY - yPrev;\n    const newx = dragger2.x + diffx;\n    const newy = dragger2.y + diffy;\n\n    const box = canvas.getBoundingClientRect();\n\n\n\n    let x, y;\n\n    if (-canvas.height*(2*newx/canvas.width - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.width/2 * (1 - newy/canvas.height)\n      }else{\n        x = newx;\n        y = -canvas.height*(2*newx/canvas.width - 1);\n      }\n    }else if(canvas.height*(2*newx/canvas.width - 1) > newy){\n      if (Math.abs(diffy/diffx) > Math.sqrt(3)){\n        y = newy;\n        x = canvas.width/2 * (newy/canvas.height + 1)\n      }else{\n        x = newx;\n        y = canvas.height*(2*newx/canvas.width - 1);\n      }\n    }else{\n      x = newx;\n      y = newy;\n    }\n\n    //edge case clearance\n\n    if (y > canvas.height){\n      y = canvas.height;\n    }else if (y < 0){\n      y = 0;\n    }\n\n    if (x > canvas.width){\n      x = canvas.width;\n    } else if (x < 0){\n      x = 0;\n    }\n\n    if (newy < 0){\n      y = 0;\n      x = canvas.width/2;\n    }\n\n    xPrev = e.clientX;\n    yPrev = e.clientY;\n\n    const triangleDragger = {x,y};\n    applyUpdates({triangleDragger})\n  };\n\n  document.addEventListener('mousemove', mousemove);\n\n  document.addEventListener('mouseup',()=>{\n      document.removeEventListener('mousemove', mousemove);\n    },{\n      once:true\n    }\n  );\n\n}\n","import { format, calcColor, revCalc, generateColor } from '../utils';\nimport { applyUpdates } from '../applyUpdates';\n\nexport const colorInputCallback = e => {\n    const color = [];\n    for (let i = 0; i < 3; i++) {\n      const input = document.getElementById(`color-${i}`);\n      let val = +input.value;\n      if (input === e.target && !(val >= 0 && val <= 255)){\n        input.value = input.last;\n        return;\n      };\n      color.push(val);\n      input.last = val;\n    }\n    applyUpdates(generateColor(color))\n  };\n","import { format, create } from '../utils';\nimport { colorInputCallback } from '../listeners/colorInputCallback';\n\n\nexport const initializeSwatch = () => {\n  const swatch =\n    create('DIV', container, {\n      id: 'swatch'\n    },{\n      background: format(canvas.color)\n    });\n\n    const red = document.createElement('INPUT');\n    red.id = 'color-0';\n    const green = document.createElement('INPUT');\n    green.id = 'color-1';\n    const blue = document.createElement('INPUT');\n    blue.id = 'color-2';\n\n    [red,green,blue].forEach(input => {\n      input.setAttribute('size', 3);\n      input.addEventListener('input',colorInputCallback);\n      input.addEventListener('focus',e=>e.target.select())\n    })\n\n    create('SPAN', swatch, {innerHTML: 'rgb('});\n    swatch.append(red);\n    create('SPAN', swatch, {innerHTML: ','});\n    swatch.append(green);\n    create('SPAN', swatch, {innerHTML: ','});\n    swatch.append(blue);\n    create('SPAN', swatch, {innerHTML: ')'});\n}\n","import { create, calcColor } from '../utils';\nimport { circleDraggerCallback } from '../listeners/circleDraggerCallback';\n\n\n\nexport const initializeCircleSlider = (canvasWidth, spectrumWidth, dragDiam) => {\n  const spectrumContainer = create('DIV', container,{\n    id: 'spectrumContainer',\n    width: canvasWidth\n  },{\n    background: 'black',\n    height: canvasWidth + 'px',\n    width: canvasWidth + 'px',\n    position: 'relative'\n  })\n\n  const circleSlider = create('CANVAS', spectrumContainer, {\n    id: 'circleSlider',\n    height: canvasWidth,\n    width: canvasWidth,\n    thickness: spectrumWidth\n  });\n\n  const circleDragger = create('DIV', spectrumContainer, {\n    id: 'circleDragger',\n    diameter: dragDiam,\n    x: 0,\n    y: canvasWidth/2\n  },{\n    height: dragDiam + 'px',\n    width: dragDiam + 'px',\n    'border-radius': '50%',\n    background: 'white',\n    position: 'absolute',\n    top: (spectrumWidth - dragDiam)/2 + 'px',\n    left: (canvasWidth - dragDiam)/2 + 'px'\n  })\n  circleDragger.addEventListener('mousedown', circleDraggerCallback);\n\n  const ctx2 = circleSlider.getContext('2d');\n\n  const buffer = ctx2.createImageData(canvasWidth, canvasWidth);\n  const curve = boundaryMap(canvasWidth/2, canvasWidth/2 - spectrumWidth);\n  populateBuffer(buffer, canvasWidth/2 - spectrumWidth, curve);\n}\n\n\n\nconst fillPixel = (buffer, i, color) => {\n  buffer.data[i*4 + 0] = color[0];\n  buffer.data[i*4 + 1] = color[1];\n  buffer.data[i*4 + 2] = color[2];\n};\n\n\nconst populateBuffer = (buffer, innerRadius, curve) => {\n  for (let i = 0; i < circleSlider.width * circleSlider.width; i++){\n\n    let left = i % circleSlider.width;\n    const x = left - circleSlider.width/2;\n\n    let bottom = circleSlider.width - Math.floor(i / circleSlider.width);\n    const y = bottom - circleSlider.width/2;\n\n    if (x === 0 && y === 0) continue;\n\n    let progress=0;\n    if (x < 0){\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3;\n    } else {\n      progress = (Math.atan(y/x) / Math.PI * 2 + 1)/2 * 3 + 3;\n    }\n\n    const color = calcColor(progress);\n\n    fillPixel(buffer,i,color);\n    const rSquare = x*x + y*y;\n    if ( rSquare <= circleSlider.width*circleSlider.width/4 && rSquare >= innerRadius* innerRadius){\n      buffer.data[i*4 + 3] = 255;\n    }\n\n    antiAlias(x,y,curve, buffer, i);\n  }\n\n  const ctx = circleSlider.getContext('2d');\n  ctx.putImageData(buffer,0,0);\n}\n\n\n\n\n\n//TODO find boundary. if x < 0 find error. if x > 0 find error next time.\n//TODO find negative boundary. figure out where to place.\n\n\nconst boundaryMap = (oR, iR) => {\n  const outer = [];\n  const inner = [];\n\n  for (let i=0; i<=circleSlider.width/2; i++){\n    const coord = i - circleSlider.width/2;\n    outer[i] = Math.sqrt(oR*oR - i*i);\n    inner[i] = Math.sqrt(iR*iR - i*i);\n  }\n  return { outer, inner };\n}\n\n\n\n\n\n\n\n\nconst collisionMap = (x, y, curve) => {\n  const xabs = Math.abs(x);\n  const yabs = Math.abs(y);\n  let l,r,t,b;\n\n  if (\n    //top collision\n    xabs <= curve[yabs] &&\n    curve[yabs] <= xabs+1\n  ){\n    t = curve[yabs] - xabs;\n  }\n\n  if (\n    //bottom collision\n    xabs <= curve[yabs+1] &&\n    curve[yabs+1] <= xabs+1\n  ){\n    b = curve[yabs + 1] - xabs;\n  }\n\n  if (\n    //left collision\n    yabs <= curve[xabs] &&\n    curve[xabs] <= yabs+1\n  ){\n    l = curve[xabs] - yabs;\n  }\n\n  if (\n    //right collision\n    yabs <= curve[xabs+1] &&\n    curve[xabs+1] <= yabs+1\n  ){\n    r = curve[xabs + 1] - yabs;\n  }\n\n  return { l, r, t, b }\n}\n\n\n\n\nconst gt = (x,y) => x >= y;\nconst lt = (x,y) => x <= y;\n\nconst orient = (x, y, cb, radius) => {\n  let orientation;\n\n  if (cb(x*x + y*y, radius*radius)){\n    orientation = {x:0, y:0}\n  } else if (cb(x*x + (y+1)*(y+1), radius*radius)) {\n    orientation = {x:0, y:1}\n  } else if (cb((x+1)*(x+1) + y*y, radius*radius)) {\n    orientation = {x:1, y:0}\n  } else {\n    orientation = {x:1, y:1}\n  }\n\n  return orientation;\n}\n\n\nconst setOpacity = (orientation,buffer,i,l,r,t,b,lt,x,y, radius) => {\n  let opacity;\n\n  if (typeof(b) === 'number' && typeof(t) === 'number'){\n    opacity = (\n      orientation.x === 0 ?\n        (b + t)/2 :\n        1 - (b + t)/2\n    )\n    buffer.data[i*4 + 3] = opacity*255\n  } else if (typeof(l) ==='number' && typeof(r) === 'number'){\n    opacity = (\n      orientation.y === 0 ?\n        (l + r)/2 :\n        1 - (l + r)/2\n    )\n    buffer.data[i*4 + 3] = opacity*255\n  } else if (typeof(r) === 'number' && typeof(b) === 'number'){\n      opacity = lt ? 1 : 0;\n      buffer.data[i*4 + 3] = opacity*255\n  } else if ( typeof(l) ==='number' && typeof(t) === 'number'){\n      opacity = lt ? 0 : 1;\n      buffer.data[i*4 + 3] = opacity*255\n  }\n\n  if (l === 0 || r === 0 || t === 0 || b === 0){\n    //TODO: address boundary cases!!!\n    // fillPixel(buffer,i,[0,0,0]);\n    // buffer.data[i*4 + 3] = 255;\n    // console.log({l,r,t,b},{x,y},{radius});\n  }\n}\n\n\n\nconst antiAlias = (x, y, curve, buffer, i) => {\n\n  const oR = circleSlider.width/2;\n  const iR = circleSlider.width/2 - circleSlider.thickness;\n\n  const xabs = Math.abs(x);\n  const yabs = Math.abs(y);\n  let l,r,t,b, orientation;\n\n\n  ({l,r,t,b} = collisionMap(x, y, curve.outer));\n  orientation = orient(x, y, lt, oR);\n\n  setOpacity(orientation,buffer,i,l,r,t,b,true, x,y,oR);\n\n  ({l,r,t,b} = collisionMap(x, y, curve.inner));\n  orientation = orient(x, y, gt, iR);\n\n  setOpacity(orientation,buffer,i,l,r,t,b, false, x,y,iR);\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n//NOTE there's something wrong with triangular cutouts (case 3-6, not 1-2)\n// const setOpacity = (orientation,buffer,i,l,r,t,b,lt) => {\n//   let opacity;\n//\n//   if (typeof(b) === 'number' && typeof(t) === 'number'){\n//     opacity = (\n//       orientation.x === 0 ?\n//         (b + t)/2 :\n//         1 - (b + t)/2\n//     )\n//     buffer.data[i*4 + 3] = opacity*255;\n//     console.log(orientation);\n//     }else if (typeof(l) ==='number' && typeof(r) === 'number'){\n//     opacity = (\n//       orientation.y === 0 ?\n//         (l + r)/2 :\n//         1 - (l + r)/2\n//     )\n//   buffer.data[i*4 + 3] = opacity*255;\n// }else if (typeof(l) === 'number' && typeof(b) === 'number'){\n//     const base = l;\n//     const height = b;\n//     const area = base * height / 2;\n//     opacity = lt ? 0 : 0;\n//     buffer.data[i*4 + 3] = opacity*255;\n//\n//   }else if (typeof(r) === 'number' && typeof(b) === 'number'){\n//     const base = 1-r;\n//     const height = b;\n//     const area = base * height / 2;\n//     opacity = lt ? 1 : 0;\n//     buffer.data[i*4 + 3] = opacity*255;\n//\n//   }else if ( typeof(l) ==='number' && typeof(t) === 'number'){\n//     const base = l;\n//     const height = 1-t;\n//     const area = base * height / 2;\n//     opacity = lt ? 0 : 1;\n//     buffer.data[i*4 + 3] = opacity*255;\n//\n//   }else if (typeof(r) === 'number' && typeof(t) ==='number'){\n//     const base = 1-r;\n//     const height = 1-t;\n//     const area = base * height / 2;\n//     opacity = lt ? 0 : 0;\n//     buffer.data[i*4 + 3] = opacity*255;\n//\n//   }\n// }\n","import { initialize } from './initialize'\n\n\n\n\n//const grab = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), default';\n//const grabbing = 'url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/closedhand.cur), default';\n\n\ndocument.addEventListener('DOMContentLoaded', initialize);\n","import { updateCanvas } from './updaters/updateCanvas';\nimport { updateDragger2 } from './updaters/updateDragger2';\nimport { updateSwatch } from './updaters/updateSwatch';\n\nimport { format, calcColor, create } from './utils'\n\nimport { dragger2Callback } from './listeners/dragger2Callback';\n\nimport { initializeSwatch } from './initializers/initializeSwatch';\nimport { initializeDragger2 } from './initializers/initializeDragger2';\nimport { initializeCanvas } from './initializers/initializeCanvas';\n\n\nimport { initializeCircleSlider } from './initializers/initializeCircleSlider';\n\n\n\n\nexport const initialize = () => {\n\n  const d2diameter = 30;\n  const sliderWidth = 10;\n  const canvasWidth = 200;\n  const sliderHeight = Math.round(canvasWidth*Math.sqrt(3)/2);\n\n  const circleSliderWidth = 340;\n  const circleSliderThickness = 20;\n  const circleSliderDragger = 20;\n\n\n  document.body.style.cursor = 'default';\n\n  const container =\n    create('DIV',document.body,{id: 'container'},{display: 'flex'});\n\n  initializeCircleSlider(\n    circleSliderWidth,\n    circleSliderThickness,\n    circleSliderDragger); //TODO fails on odd numbered widths\n  initializeCanvas(canvasWidth);\n  initializeDragger2(d2diameter);\n  initializeSwatch();\n\n\n\n  updateDragger2();\n  updateSwatch();\n}\n","import { create } from '../utils';\nimport { updateCanvas } from '../updaters/updateCanvas';\n\nexport const initializeCanvas = (canvasWidth) => {\n\n\n  const height = Math.round(canvasWidth*Math.sqrt(3)/2);\n\n  const triangleContainer = create('DIV',spectrumContainer, {\n    id: 'triangleContainer'\n  },{\n    height: Math.round(canvasWidth*Math.sqrt(3)/2),\n    width: canvasWidth,\n    position: 'absolute',\n    top: circleSlider.height/2 - height + canvasWidth/(2*Math.sqrt(3)) + 'px',\n    left: (circleSlider.width - canvasWidth)/2 + 'px',\n  });\n\n  const canvas = create('CANVAS', triangleContainer, {\n    id: 'canvas',\n    height: Math.round(canvasWidth*Math.sqrt(3)/2),\n    width: canvasWidth,\n  });\n\n  updateCanvas([255, 0, 0, 255]);\n  const ctx = canvas.getContext('2d');\n}\n","import { create } from '../utils';\nimport { dragger2Callback } from '../listeners/dragger2Callback';\n\n\nexport const initializeDragger2 = (d2diameter) => {\n  const dragger2 =\n    create('DIV', triangleContainer, {\n      id: 'dragger2',\n      color: canvas.color,\n      diameter: d2diameter,\n      x: canvas.width/2,\n      y: 0,\n    },{\n      height: d2diameter + 'px',\n      width: d2diameter + 'px',\n      borderRadius: '50%',\n      left: (canvas.width - d2diameter)/2 + 'px',\n      top: -d2diameter/2 + 'px'\n    });\n    dragger2.addEventListener('mousedown', dragger2Callback);\n};\n"],"sourceRoot":""}